#!/bin/bash

# Create report.html for checking quality of HCP pipeline outputs
# Takuya Hayashi, RIKEN BDR
# Copyright (c) 2022- RIKEN

# StructuralQC.scene was created by modifying a software, Human Connectome Project [StructuralQC].
# Copyright (c) 2011-2016 [The Human Connectome Project][HCP]

set -e

VERSION=0.1

BCILDIR=$(
	cd $(dirname $0)
	cd ..
	pwd
)
source $BCILDIR/bcilconf/settings.sh

# Need to set the following variables in $BCILDIR/bcilconf/settings.sh:
# CARET7DIR
# HCPPIPEDIR
# FREESURFER_HOME
# FSLDIR
# Need to install ImageMagick in system.

# Check if ImageMagick is installed (for convert)
if [[ $(which convert 2>/dev/null) = "" ]]; then
	echo "ERROR: cannot find 'convert' in system. Please install ImageMagick."
	exit 1
fi
if [[ $(which zipmerge 2>/dev/null) = "" ]]; then
	echo "WARNING: cannot find 'zipmerge'. You cannot zip archive if you use -z option."
else
	ZipMerge=ON
fi

Usage_exit() {

	echo ""
	echo " QC for HCP pipeline data"
	echo ""
	echo " Usage 1: hcppipe_qc <Study Folder> <Subject ID> <arguments>"
	echo ""
	echo " Compulsory arguments (any one or more of):"
	echo "    -s : Structural QC"
	# echo "    -F : Fieldmap QC (you need to run fieldmap correction for structure)"
	echo "    -i : ICA-FIX QC (you need to run PostFIX using ICA_Classification_SingleScreenTemplate_BMB.scene before running this script)"
	echo "    -f : Functional QC (you need to run RestingStateStats)"
	echo "    -d : Diffusion QC"
	echo "    -t : Tractography QC"
	# echo "    -z <modality label>: zip archive for modality label (e.g. sfFdt). Output is <Study Folder>/<Subject ID>/QC/<Subject ID>_<modality label>.zip"
	echo ""
	echo " Optional arguments:"
	echo "    -a <num> : atlas species (0: Human [default], 1: Macaque [MacaqueRIKEN32BS], 2: Marmoset, 3: Macaque cynomolgus [SpecMac24cyno])"
	echo "    -m       : create movie of fMRI before and after ICA-FIX clean in Functional QC"
	echo ""
	exit 1

}

round() {
	digit=$2
	LANG=C printf "%1.${digit}f" $1
}

gifmergeh() {
	# merge two gif files into a single gif horizontally
	# assuming two gif files are same in frame size and rate
	gif1=$1
	gif2=$2
	gifout=$3
	tmp=gifmerge_$$
	convert $gif1 -coalesce /tmp/${tmp}_a-%04d.gif
	convert $gif2 -coalesce /tmp/${tmp}_b-%04d.gif
	fr=$(identify -format "%f[%s] %T\n" $gif1 | awk 'NR==1 {print $2}')
	for f in /tmp/${tmp}_a-*.gif; do convert $f ${f/a/b} +append ${f/a/c}; done
	convert -loop 0 -delay $fr /tmp/${tmp}_c-*.gif $gifout
	rm -rf /tmp/${tmp}_*
}

acpcnii2gif() {
	Inp=$1
	tmp=/tmp/ACPC2SliceGIF_$$
	if [[ $2 = "-m" ]]; then
		shift
		Brainmask=$2
		range="-i $(fslstats $Inp -k $Brainmask -P 4 -P 96)"
	elif [[ $($FSLDIR/bin/imtest $2) = 1 ]]; then
		range=$2
	elif [[ $2 =~ NONE ]]; then
		range=""
	fi
	Out=$3
	i=30
	while [ $i -le 214 ]; do
		j=$(zeropad $i 3)
		slicer $Inp $range -z -$i ${tmp}_${j}.png
		i=$((i + 8))
	done
	pngappend ${tmp}_030.png + ${tmp}_038.png + ${tmp}_046.png + ${tmp}_054.png + ${tmp}_062.png + ${tmp}_070.png + ${tmp}_078.png + ${tmp}_086.png - ${tmp}_094.png + ${tmp}_102.png + ${tmp}_110.png + ${tmp}_118.png + ${tmp}_126.png + ${tmp}_134.png + ${tmp}_142.png + ${tmp}_150.png - ${tmp}_158.png + ${tmp}_166.png + ${tmp}_174.png + ${tmp}_182.png + ${tmp}_190.png + ${tmp}_198.png + ${tmp}_206.png + ${tmp}_214.png ${tmp}_out.png
	convert ${tmp}_out.png $Out
	rm ${tmp}_???.png
}

tsv2html() {
	#convert a TSV file to an HTML file
	#author: Donald L. Merand

	#note: this is most useful in conjunction with bcat, which sends results to the browser
	# you can get bcat on OS X using homebrew
	# http://mxcl.github.com/homebrew/
	# then type "brew install bcat"

	#also note: this script only creates an HTML snippet - you'll probably want to wrap
	# it in some pretty CSS, not to mention <html> and <body> tags

	#convert Mac line endings, if any
	perl -p -e 's/\r/\n/g' |

		#now do the conversion
		awk '
BEGIN {
  FS="\t"
  printf "<table>\n"
}
{
  printf "\n\n<tr>"
  for (i=1;i<=NF;i++) {
    printf "<td>%s</td>", $i
  }
  printf "</tr>"
}
END {
  printf "\n</table>"
}'

}

[ "$3" = "" ] && Usage_exit

StudyFolder=$1
Subject=$2
shift 2

WIDTH=1900
Species=0
CreateMovie="OFF"

while getopts sfdtFz:a:im OPT; do
	case "$OPT" in
	"s") Struc="ON" ;;
	"f") Func="ON" ;;
	"d") Diff="ON" ;;
	"t") Tract="ON" ;;
	"F") Fieldmap="ON" ;;
	"z")
		Zip="ON"
		Mod="$OPTARG"
		;;
	"a") Species="$OPTARG" ;;
	"i") ICAFIX=ON ;;
	"m") CreateMovie="ON" ;;
	*) Usage_exit ;;
	esac
done

if [ $Species = 0 ]; then

	TemplateFolder=${BCILDIR}/data/HCP-S1200
	TemplateName=S1200
	LABEL=${TemplateFolder}/MNINonLinear/fsaverage_LR32k/Q1-Q6_RelatedParcellation210.CorticalAreas_dil_Final_Final_Areas_Group_Colors.32k_fs_LR.dlabel.nii
	MyelinQ1to3=${TemplateFolder}/MNINonLinear/S1200.MyelinMap_BC_MSMAll_Q1-2-3.164k_fs_LR.dscalar.nii
	ThicknessQ1to3=${TemplateFolder}/MNINonLinear/S1200.thickness_MSMAll_Q1-2-3.164k_fs_LR.dscalar.nii
	ICAdim=40

elif [ $Species = 1 ]; then

	TemplateFolder=${BCILDIR}/data/MacaqueRIKEN32BS
	TempateName=MacaqueRIKEN32BS
	MyelinQ1to3=${TemplateFolder}/MNINonLinear/${TempateName}.MyelinMap_BC_Q1-2-3.164k_fs_LR.dscalar.nii
	ThicknessQ1to3=${TemplateFolder}/MNINonLinear/${TempateName}.thickness_Q1-2-3.164k_fs_LR.dscalar.nii
	LABEL=${TemplateFolder}/MNINonLinear/fsaverage_LR32k/M150_eccentricity_106-area.32k_fs_LR.dlabel.nii
	ICAdim=19

elif [ $Species = 2 ]; then

	TemplateFolder=${BCILDIR}/data/MarmosetRIKEN20
	TempateName=MarmosetRIKEN20
	LABEL=${TemplateFolder}/MNINonLinear/fsaverage_LR32k/${TempateName}.parcellations_v1.0.32k_fs_LR.dlabel.nii
	MyelinQ1to3=${TemplateFolder}/MNINonLinear/${TempateName}.MyelinMap_BC_Q1-2-3.164k_fs_LR.dscalar.nii
	ThicknessQ1to3=${TemplateFolder}/MNINonLinear/${TempateName}.thickness_Q1-2-3.164k_fs_LR.dscalar.nii
	ICAdim=10

elif [ $Species = 3 ]; then

	TemplateFolder=${BCILDIR}/data/SpecMac24cyno
	TempateName=SpecMac24cyno
	MyelinQ1to3=${TemplateFolder}/MNINonLinear/${TempateName}.MyelinMap_BC_Q1-2-3.164k_fs_LR.dscalar.nii
	ThicknessQ1to3=${TemplateFolder}/MNINonLinear/${TempateName}.thickness_Q1-2-3.164k_fs_LR.dscalar.nii
	LABEL=${TemplateFolder}/MNINonLinear/fsaverage_LR32k/M150_eccentricity_106-area.32k_fs_LR.dlabel.nii
	ICAdim=19

else
	echo "ERROR: unknown species: $Species"
	exit 1
fi

OutputFolder=$StudyFolder/$Subject/QC

if [ ! -w $StudyFolder/$Subject/ ]; then
	echo "ERROR: do no have write permission for $StudyFolder/$Subject"
	exit 1
fi

mkdir -p $OutputFolder/.files

cp ${FSLDIR}/doc/fsl.css ${BCILDIR}/doc/images/BCIL_1.png ${BCILDIR}/doc/images/fsl-logo-x2.png ${BCILDIR}/doc/images/hcplogo1.jpg ${BCILDIR}/doc/images/freesurfer.png ${BCILDIR}/doc/images/bmb.png ${BCILDIR}/doc/images/favicon.ico ${BCILDIR}/doc/hcppipe_qc/magnifier.css ${BCILDIR}/doc/hcppipe_qc/magnifier.js ${BCILDIR}/doc/hcppipe_qc/jquery.min.js ${BCILDIR}/doc/hcppipe_qc/lightbox.css ${BCILDIR}/doc/hcppipe_qc/lightbox.min.js $OutputFolder/.files/

echo "Running QC for $Subject"
echo "host=$(hostname)"

# QC for Structure
if [[ $Struc = ON && ! $(ls $StudyFolder/$Subject/MNINonLinear/*spec 2>/dev/null) = "" ]]; then

	echo "Running Structural QC"

	if [ -e $OutputFolder/Structure ]; then rm -rf $OutputFolder/Structure; fi
	WD=$OutputFolder/Structure
	reportdir=${WD}/report
	reporthtml=${WD}/report.html
	mkdir -p $reportdir
	touch $reporthtml

	echo "<HTML><HEAD><link REL=\"stylesheet\" TYPE=\"text/css\" href=\"../.files/fsl.css\"><TITLE>HCPPIPE QC REPORT</TITLE><link rel="icon" type="image/x-icon" href="../.files/favicon.ico"> <link href="../.files/lightbox.css" rel=stylesheet>
 <script src="../.files/jquery.min.js"></script><script src="../.files/lightbox.min.js" type="text/javascript"></script><link type="text/css" href="../.files/magnifier.css" rel="stylesheet"><script type="text/javascript" src="../.files/magnifier.js"></script></HEAD><BODY BGCOLOR=\"#FFFFFF\" TEXT=\"#151515\">" >>$reporthtml
	echo "<a name=\"Images\"><div id=\"Images\"></div></a>" >>$reporthtml
	echo "<hr><B><span style=\"color:gray\">Structure</span></B> - | <B>Images</B> | <a href=\"#Fieldmap\">Fieldmap</a> | <a href=\"#Biasfield\">Biasfield</a> | <a href=\"#Registration\">Registration</a> | <a href=\"#Surfaces\">Surfaces</a><BR><BR>" >>$reporthtml

	# Run image signal stats
	T1wFolder=$StudyFolder/$Subject/T1w
	FreeSurferFolder=$T1wFolder/$Subject
	T1wImage=T1w_acpc_dc
	AtlasSpaceFolder=$StudyFolder/$Subject/MNINonLinear
	AtlasSpaceT1wImage=T1w_restore
	AtlasTransform=$AtlasSpaceFolder/xfms/acpc_dc2standard
	FreeSurferLabels=$HCPPIPEDIR/global/config/FreeSurferAllLut.txt

	if [ -e $FreeSurferFolder/mri/aseg.hires.mgz ]; then
		ASEG="${FreeSurferFolder}/mri/aseg.hires.mgz"
	else
		ASEG="${FreeSurferFolder}/mri/aseg.mgz"
	fi

	${FREESURFER_HOME}/bin/mri_convert -rt nearest -rl "$T1wFolder"/"$T1wImage".nii.gz $ASEG "$T1wFolder"/aseg_1mm.nii.gz
	${FSLDIR}/bin/applywarp --rel --interp=nn -i "$T1wFolder"/aseg_1mm.nii.gz -r "$AtlasSpaceFolder"/"$AtlasSpaceT1wImage" --premat=$FSLDIR/etc/flirtsch/ident.mat -o "$T1wFolder"/aseg.nii.gz
	${FSLDIR}/bin/applywarp --rel --interp=nn -i "$T1wFolder"/aseg_1mm.nii.gz -r "$AtlasSpaceFolder"/"$AtlasSpaceT1wImage" -w "$AtlasTransform" -o "$AtlasSpaceFolder"/aseg.nii.gz
	${CARET7DIR}/wb_command -volume-label-import "$T1wFolder"/aseg.nii.gz "$FreeSurferLabels" "$T1wFolder"/aseg.nii.gz -drop-unused-labels
	${CARET7DIR}/wb_command -volume-label-import "$AtlasSpaceFolder"/aseg.nii.gz "$FreeSurferLabels" "$AtlasSpaceFolder"/aseg.nii.gz -drop-unused-labels
	${CARET7DIR}/wb_command -volume-all-labels-to-rois "$T1wFolder"/aseg.nii.gz 1 "$T1wFolder"/aseg_rois.nii.gz

	TAB="$(printf '\\\011')"
	LF=$(printf '\\\012_')
	LF=${LF%_}

	for Image in T1w_acpc_dc T2w_acpc_dc T1wDividedByT2w T1w_acpc_dc_restore T2w_acpc_dc_restore; do
		if [ -e "$T1wFolder"/"$Image".nii.gz ]; then
			echo "Creating gif for $Image"
			acpcnii2gif "$T1wFolder"/"$Image".nii.gz -m "$T1wFolder"/brainmask_fs.nii.gz $OutputFolder/Structure/report/"${Image}".gif
			echo "<I>${Image}</I><BR>" >>$reporthtml
			if [[ ! $Image =~ restore ]]; then
				echo "The image was registrated to ACPC space and corrected for static magnetic field (B0) distortion. Please check imaging artifacts and biological changes in the brain. If imaging artifacts are likely seen, please also check the raw image by clicking link below. <BR>" >>$reporthtml
				size=($(identify -format '%w %h' $OutputFolder/Structure/report/${Image}.gif))
				rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
				dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
				echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${Image}.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div>" >>$reporthtml
				if [[ $Image =~ acpc_dc ]]; then # T1w or T2w
					RawImage=$(echo $Image | sed -e 's/_acpc_dc//g')
					if [ -e $StudyFolder/$Subject/"$RawImage"/"$RawImage".nii.gz ]; then
						range=$(fslstats $StudyFolder/$Subject/"$RawImage"/"$RawImage".nii.gz -P 4 -P 96)
						${FSLDIR}/bin/slicer $StudyFolder/$Subject/"$RawImage"/"$RawImage".nii.gz -i $range -S 7 1900 $StudyFolder/$Subject/QC/Structure/report/${RawImage}.png
						convert $OutputFolder/Structure/report/${RawImage}.png $OutputFolder/Structure/report/${RawImage}.gif
						rm $OutputFolder/Structure/report/${RawImage}.png
						echo "<a href=\"./report/${RawImage}.gif\" target=\"_blank\">Raw image (open in a new tab)</a><BR>" >>$reporthtml
					fi
				fi
			else
				echo "The restore image is corrected for radiofrequency (B1) bias estimated by sqrt(T1w * T2w) method (Glasser et al., 2011). Please find imaging homogeneity is increased in restore image comapred with non-restore image. <BR>" >>$reporthtml
				size=($(identify -format '%w %h' $OutputFolder/Structure/report/${Image}.gif))
				rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
				dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
				echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${Image}.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div>" >>$reporthtml
			fi

			if [[ ! $Image =~ restore ]]; then
				echo "Stats for $Image"
				echo "brainmask_fs_MEAN" >$StudyFolder/$Subject/QC/Structure/brainmask_fs_mean_col1.txt
				${CARET7DIR}/wb_command -volume-stats "$T1wFolder"/"$Image".nii.gz -reduce MEAN -roi "$T1wFolder"/brainmask_fs.nii.gz | sed "s/${TAB}/${LF}/g" >$StudyFolder/$Subject/QC/Structure/brainmask_fs_mean_col2.txt
				echo "brainmask_fs_VARIANCE" >$StudyFolder/$Subject/QC/Structure/brainmask_fs_var_col1.txt
				${CARET7DIR}/wb_command -volume-stats "$T1wFolder"/"$Image".nii.gz -reduce VARIANCE -roi "$T1wFolder"/brainmask_fs.nii.gz >$StudyFolder/$Subject/QC/Structure/brainmask_fs_var_col2.txt
				paste $StudyFolder/$Subject/QC/Structure/brainmask_fs_mean_col?.txt >$StudyFolder/$Subject/QC/Structure/brainmask_fs_mean.txt
				paste $StudyFolder/$Subject/QC/Structure/brainmask_fs_var_col?.txt >$StudyFolder/$Subject/QC/Structure/brainmask_fs_var.txt

				${CARET7DIR}/wb_command -file-information "$T1wFolder"/aseg_rois.nii.gz -only-map-names | awk '{printf "%s_MEAN\n",$1}' >$StudyFolder/$Subject/QC/Structure/aseg_mean_col1.txt
				${CARET7DIR}/wb_command -volume-stats "$T1wFolder"/"$Image".nii.gz -reduce MEAN -roi "$T1wFolder"/aseg_rois.nii.gz | sed "s/${TAB}/${LF}/g" >$StudyFolder/$Subject/QC/Structure/aseg_mean_col2.txt
				${CARET7DIR}/wb_command -file-information "$T1wFolder"/aseg_rois.nii.gz -only-map-names | awk '{printf "%s_VARIANCE\n",$1}' >$StudyFolder/$Subject/QC/Structure/aseg_var_col1.txt
				${CARET7DIR}/wb_command -volume-stats "$T1wFolder"/"$Image".nii.gz -reduce VARIANCE -roi "$T1wFolder"/aseg_rois.nii.gz | sed "s/${TAB}/${LF}/g" >$StudyFolder/$Subject/QC/Structure/aseg_var_col2.txt
				paste $StudyFolder/$Subject/QC/Structure/aseg_mean_col?.txt >$StudyFolder/$Subject/QC/Structure/aseg_mean.txt
				paste $StudyFolder/$Subject/QC/Structure/aseg_var_col?.txt >$StudyFolder/$Subject/QC/Structure/aseg_var.txt
				cat $StudyFolder/$Subject/QC/Structure/brainmask_fs_mean.txt $StudyFolder/$Subject/QC/Structure/aseg_mean.txt $StudyFolder/$Subject/QC/Structure/brainmask_fs_var.txt $StudyFolder/$Subject/QC/Structure/aseg_var.txt >$StudyFolder/$Subject/QC/Structure/${Image}_stats.txt
				rm $StudyFolder/$Subject/QC/Structure/aseg_*.txt $StudyFolder/$Subject/QC/Structure/brainmask_fs_*.txt
				echo "<a href=\"./${Image}_stats.txt\" target=\"_blank\">Image signal stats (open in a new tab)</a><BR><BR>" >>$reporthtml
				cp $StudyFolder/$Subject/QC/Structure/${Image}_stats.txt $StudyFolder/$Subject/QC/Structure/${Image}_stats.tsv # Note that firefox does not open tsv file in tab
			else
				echo "<BR><BR>" >>$reporthtml
			fi

		fi
	done

	# Fieldmap
	if [[ -e $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/FieldMap ]]; then

		echo "<a name=\"Fieldmap\"><div id=\"Fieldmap\"></div></a>" >>$reporthtml
		echo "<hr><B><span style=\"color:gray\">Structure</span></B> - | <a href=\"#Images\">Images</a> | <B>Fieldmap</B> | <a href=\"#Biasfield\">Biasfield</a> | <a href=\"#Registration\">Registration</a> | <a href=\"#Surfaces\">Surfaces</a><BR><BR>" >>$reporthtml
		echo "Check that the input data of fieldmap is correctly used and properly analyzed -  SE filedmap should use a pair in inputs of the opposed phased encoding data (i.e. distorted symmetrically along phase encoding direction) and reasonably corrected for image-distortion and modulated by Jacobian.<BR>" >>$reporthtml
		T2wToT1wDir=$StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg
		FieldMapDir=$T2wToT1wDir/FieldMap

		if [ -e ${FieldMapDir}/acqparams.txt ]; then # SE fieldmap
			FMtype="SE field"
			if [[ $(cat ${FieldMapDir}/acqparams.txt | awk '{x = $1; S += x*x; N++;} END {print sqrt(S/N)}') != 0 ]]; then
				PhaseDir=x
			elif [[ $(cat ${FieldMapDir}/acqparams.txt | awk '{x = $2; S += x*x; N++;} END {print sqrt(S/N)}') != 0 ]]; then
				PhaseDir=y
			else
				PhaseDir=Unknown
			fi
			echo "Fieldmap type: $FMtype<BR>Opposing phase encoding axis: <B>$PhaseDir </B><BR><BR>" >>$reporthtml
			# Magnitude PhaseOne vs PhaseTwo to check registration & distortion correction quality
			for dc in _gdc _gdc_dc_jac; do
				${FSLDIR}/bin/fslroi ${FieldMapDir}/PhaseOne${dc}.nii.gz ${WD}/PhaseOne${dc}_vol0.nii.gz 0 1
				${FSLDIR}/bin/fslroi ${FieldMapDir}/PhaseTwo${dc}.nii.gz ${WD}/PhaseTwo${dc}_vol0.nii.gz 0 1
				${FSLDIR}/bin/flirt -in ${WD}/PhaseOne${dc}_vol0.nii.gz -ref ${FieldMapDir}/../T1w_acpc.nii.gz -applyxfm -init ${FieldMapDir}/../Fieldmap2T1w_acpc.mat -o ${WD}/PhaseOne${dc}_hires.nii.gz
				${FSLDIR}/bin/flirt -in ${WD}/PhaseTwo${dc}_vol0.nii.gz -ref ${FieldMapDir}/../T1w_acpc.nii.gz -applyxfm -init ${FieldMapDir}/../Fieldmap2T1w_acpc.mat -o ${WD}/PhaseTwo${dc}_hires.nii.gz
				${FSLDIR}/bin/slicer ${WD}/PhaseOne${dc}_hires.nii.gz ${FieldMapDir}/../T1w_acpc.nii.gz -s 2 -e .05 -a ${WD}/PhaseOne${dc}_hires.png
				${FSLDIR}/bin/slicer ${WD}/PhaseTwo${dc}_hires.nii.gz ${FieldMapDir}/../T1w_acpc.nii.gz -s 2 -e .05 -a ${WD}/PhaseTwo${dc}_hires.png

				convert -loop 0 -delay 100 ${WD}/PhaseOne${dc}_hires.png ${WD}/PhaseTwo${dc}_hires.png ${reportdir}/PhaseOnevsTwo${dc}.gif
				rm ${WD}/PhaseOne${dc}_hires.png ${WD}/PhaseTwo${dc}_hires.png
				imrm ${WD}/PhaseOne${dc}_vol0.nii.gz ${WD}/PhaseTwo${dc}_vol0.nii.gz ${WD}/PhaseOne${dc}_hires.nii.gz ${WD}/PhaseTwo${dc}_hires.nii.gz
				#echo "<IMG src=\"./report/PhaseOnevsTwo${dc}.gif\"  width=\"${WIDTH}\" border=\"0\"><BR><BR>" >> $reporthtml
			done
			echo "<I>Distorted (left) and distortion-corrected images of SE fieldmap data (right) </I><BR>" >>$reporthtml
			gifmergeh ${reportdir}/PhaseOnevsTwo_gdc.gif ${reportdir}/PhaseOnevsTwo_gdc_dc_jac.gif ${reportdir}/PhaseOnevsTwo_gdc_merge.gif
			rm ${reportdir}/PhaseOnevsTwo_gdc.gif ${reportdir}/PhaseOnevsTwo_gdc_dc_jac.gif
			size=($(identify -format '%w %h' ${reportdir}/PhaseOnevsTwo_gdc_merge.gif))
			rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
			dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
			echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/PhaseOnevsTwo_gdc_merge.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

			# Fieldmap and agnitude vs T1w_acpc to check registration
			$FSLDIR/bin/fslmaths $T2wToT1wDir/FieldMap2T1w_acpc -thr 0 $T2wToT1wDir/FieldMap2T1w_acpc_p
			$FSLDIR/bin/fslmaths $T2wToT1wDir/FieldMap2T1w_acpc -uthr 0 -mul -1 $T2wToT1wDir/FieldMap2T1w_acpc_m
			$FSLDIR/bin/overlay 1 0 $T2wToT1wDir/T1w_acpc.nii.gz -a $T2wToT1wDir/FieldMap2T1w_acpc_p .1 500 $T2wToT1wDir/FieldMap2T1w_acpc_m .1 500 -s 2 $T2wToT1wDir/FieldMap2T1w_acpc_overlay.nii.gz
			$FSLDIR/bin/slicer $T2wToT1wDir/FieldMap2T1w_acpc_overlay.nii.gz -a ${reportdir}/FieldMap2T1w_acpc_overlay.png
			if [ -e ${FieldMapDir}/../Magnitude_brain_warppedT1w2T1w_acpc.nii.gz ]; then #SE fieldmap
				Mag2T1w=${FieldMapDir}/../Magnitude_brain_warppedT1w2T1w_acpc.nii.gz
			elif [ -e ${FieldMapDir}/../Magnitude_warppedT1w2T1w_acpc.nii.gz ]; then # GE filedmap
				Mag2T1w=${FieldMapDir}/../Magnitude_warppedT1w2T1w_acpc.nii.gz
			fi
			${FSLDIR}/bin/slicer $Mag2T1w ${FieldMapDir}/../T1w_acpc.nii.gz -s 2 -a ${reportdir}/MagT1w_acpc.png
			$FSLDIR/bin/pngappend ${reportdir}/FieldMap2T1w_acpc_overlay.png + ${reportdir}/MagT1w_acpc.png ${reportdir}/FieldMapMag2T1w_acpc_overlay.png
			rm ${reportdir}/FieldMap2T1w_acpc_overlay.png ${reportdir}/MagT1w_acpc.png

			echo "<I>B0 fieldmap and magnitude</I><BR><" >>$reporthtml
			echo "Check that fieldmap bias is high in inferior temporal areas but not so high in other areas, and the magnitude and T1w_acpc is well registered and that mincost of BBR registration is reasonably small. <BR>" >>$reporthtml
			size=($(identify -format '%w %h' ${reportdir}/FieldMapMag2T1w_acpc_overlay.png))
			rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
			dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
			echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/FieldMapMag2T1w_acpc_overlay.png\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div>" >>$reporthtml
			cp $FSLDIR/etc/luts/ramp*.gif ${reportdir}/
			echo "-500<img src=\"./report/ramp2.gif\"><img src=\"./report/ramp.gif\">500 <BR>" >>$reporthtml
			# Topup fieldmap
			#${CARET7DIR}/wb_command -volume-gradient ${FieldMapDir}/../FieldMap2T1w_acpc.nii.gz ${WD}/FieldMap2T1w_acpc_gradient.nii.gz -vectors ${WD}/FieldMap2T1w_acpc_gradientvectors.nii.gz
			#${FSLDIR}/bin/imrm ${WD}/FieldMap2T1w_acpc_gradient.nii.gz

			echo -e "${FMtype} B0 fieldmap [rad/sec] in brain area\t" >${WD}/Fieldmap_stats.tsv
			${FSLDIR}/bin/fslstats ${FieldMapDir}/TopupField.nii.gz -k ${FieldMapDir}/Magnitude_brain -p 0 -p 25 -p 50 -p 75 -p 100 | awk '{printf "Min\t%1.5f\nQ1\t%1.5f\nQ2\t%1.5f\nQ3\t%1.5f\nMax\t%1.5f\nIQR\t%1.5f\n",$1,$2,$3,$4,$5,$4-$2}' >>${WD}/Fieldmap_stats.tsv

		else               # GE fieldmap
			FMtype="GE field" # GE fieldmap
			#${CARET7DIR}/wb_command -volume-gradient ${FieldMapDir}/../FieldMap2T1w_acpc.nii.gz ${WD}/FieldMap2T1w_acpc_gradient.nii.gz -vectors ${WD}/FieldMap2T1w_acpc_gradientvectors.nii.gz
			#${FSLDIR}/bin/imrm ${WD}/FieldMap2T1w_acpc_gradient.nii.gz
			echo -e "${FMtype} B0 fieldmap [rad/sec] in brain area\t" >${WD}/Fieldmap_stats.tsv
			${FSLDIR}/bin/fslstats ${FieldMapDir}/FieldMap.nii.gz -k ${FieldMapDir}/Magnitude_brain -p 0 -p 25 -p 50 -p 75 -p 100 | awk '{printf "Min\t%1.5f\nQ1\t%1.5f\nQ2\t%1.5f\nQ3\t%1.5f\nMax\t%1.5f\nIQR\t%1.5f\n",$1,$2,$3,$4,$5,$4-$2}' >>${WD}/Fieldmap_stats.tsv
			echo "TO DO" >>$reporthtml

		fi

		cat ${WD}/Fieldmap_stats.tsv | tsv2html >>$reporthtml
		echo -e "FSL_FLIRT_mincost\n$(flirt -in $Mag2T1w -ref ${FieldMapDir}/../T1w_acpc.nii.gz -schedule ${FSLDIR}/etc/flirtsch/measurecost1.sch -init ${FieldMapDir}/../Fieldmap2T1w_acpc.mat | head -1 | awk '{print $1}')" >$WD/FieldmapMag2T1w.mincost.csv
		cat $WD/FieldmapMag2T1w.mincost.csv | awk -F, '{ for (i=1; i<=NF; i++)  { a[NR,i] = $i } } NF>p { p = NF }END {for(j=1; j<=p; j++) { str=a[1,j]; for(i=2; i<=NR; i++){ str=str"\t"a[i,j]; } printf "%s\n", str}}' >$WD/FieldmapMag2T1w.mincost.tsv

		rm $WD/FieldmapMag2T1w.mincost.csv
		# output tab delimited txt to html
		cat $WD/FieldmapMag2T1w.mincost.tsv | tsv2html >>$reporthtml
	fi

	# Biasfiled
	if [ -e $StudyFolder/$Subject/T1w/BiasFieldCorrection_sqrtT1wXT1w ]; then
		echo "WARNING: HCP pipeline was analyzed with ver 3. T1w/BiasFieldCorrection_sqrtT1wXT1w will be symbolic linked to T1w/BiasFieldCorrection_sqrtT1wXT2w."
		ln -sf BiasFieldCorrection_sqrtT1wXT1w $StudyFolder/$Subject/T1w/BiasFieldCorrection_sqrtT1wXT2w
	fi

	if [ -e $StudyFolder/$Subject/T1w/BiasFieldCorrection_sqrtT1wXT2w ]; then
		echo "Creating biasfild QC"
		echo "<a name=\"Biasfield\"><div id=\"Biasfield\"></div></a>" >>$reporthtml
		echo "<hr><B><span style=\"color:gray\">Structure</span></B> - | <a href=\"#Images\">Images</a> | <a href=\"#Fieldmap\">Fieldmap</a> | <B>Biasfield</B> | <a href=\"#Registration\">Registration</a> | <a href=\"#Surfaces\">Surfaces</a><BR><BR>" >>$reporthtml

		if [ -e "$T1wFolder"/BiasFieldCorrection_sqrtT1wXT2w/T1wmulT2w.nii.gz ]; then
			ln -sf BiasFieldCorrection_sqrtT1wXT2w/T1wmulT2w.nii.gz "$T1wFolder"/T1wmulT2w.nii.gz
		fi
		Image=T1wmulT2w
		echo "Creating gif for $Image"
		acpcnii2gif "$T1wFolder"/"$Image".nii.gz -m "$T1wFolder"/brainmask_fs.nii.gz $OutputFolder/Structure/report/${Image}.gif
		echo "<I>sqrtT1wMulT2w</I><BR>" >>$reporthtml
		echo "This image is formed by sqrt(T1w*T2w) and is useful to find imaging artifacts including signal inhomogeneity bias and motioin. This image is used for estimating low-spatial frequency B1 biasfield in T1w and T2w images. <BR>" >>$reporthtml
		size=($(identify -format '%w %h' $OutputFolder/Structure/report/${Image}.gif))
		rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
		dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
		echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${Image}.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div>" >>$reporthtml
		echo "Stats for $Image"
		echo "brainmask_fs_MEAN" >$StudyFolder/$Subject/QC/Structure/brainmask_fs_mean_col1.txt
		${CARET7DIR}/wb_command -volume-stats "$T1wFolder"/"$Image".nii.gz -reduce MEAN -roi "$T1wFolder"/brainmask_fs.nii.gz | sed "s/${TAB}/${LF}/g" >$StudyFolder/$Subject/QC/Structure/brainmask_fs_mean_col2.txt
		echo "brainmask_fs_VARIANCE" >$StudyFolder/$Subject/QC/Structure/brainmask_fs_var_col1.txt
		${CARET7DIR}/wb_command -volume-stats "$T1wFolder"/"$Image".nii.gz -reduce VARIANCE -roi "$T1wFolder"/brainmask_fs.nii.gz >$StudyFolder/$Subject/QC/Structure/brainmask_fs_var_col2.txt
		paste $StudyFolder/$Subject/QC/Structure/brainmask_fs_mean_col?.txt >$StudyFolder/$Subject/QC/Structure/brainmask_fs_mean.txt
		paste $StudyFolder/$Subject/QC/Structure/brainmask_fs_var_col?.txt >$StudyFolder/$Subject/QC/Structure/brainmask_fs_var.txt

		${CARET7DIR}/wb_command -file-information "$T1wFolder"/aseg_rois.nii.gz -only-map-names | awk '{printf "%s_MEAN\n",$1}' >$StudyFolder/$Subject/QC/Structure/aseg_mean_col1.txt
		${CARET7DIR}/wb_command -volume-stats "$T1wFolder"/"$Image".nii.gz -reduce MEAN -roi "$T1wFolder"/aseg_rois.nii.gz | sed "s/${TAB}/${LF}/g" >$StudyFolder/$Subject/QC/Structure/aseg_mean_col2.txt
		${CARET7DIR}/wb_command -file-information "$T1wFolder"/aseg_rois.nii.gz -only-map-names | awk '{printf "%s_VARIANCE\n",$1}' >$StudyFolder/$Subject/QC/Structure/aseg_var_col1.txt
		${CARET7DIR}/wb_command -volume-stats "$T1wFolder"/"$Image".nii.gz -reduce VARIANCE -roi "$T1wFolder"/aseg_rois.nii.gz | sed "s/${TAB}/${LF}/g" >$StudyFolder/$Subject/QC/Structure/aseg_var_col2.txt
		paste $StudyFolder/$Subject/QC/Structure/aseg_mean_col?.txt >$StudyFolder/$Subject/QC/Structure/aseg_mean.txt
		paste $StudyFolder/$Subject/QC/Structure/aseg_var_col?.txt >$StudyFolder/$Subject/QC/Structure/aseg_var.txt
		cat $StudyFolder/$Subject/QC/Structure/brainmask_fs_mean.txt $StudyFolder/$Subject/QC/Structure/aseg_mean.txt $StudyFolder/$Subject/QC/Structure/brainmask_fs_var.txt $StudyFolder/$Subject/QC/Structure/aseg_var.txt >$StudyFolder/$Subject/QC/Structure/${Image}_stats.txt
		rm $StudyFolder/$Subject/QC/Structure/aseg_*.txt $StudyFolder/$Subject/QC/Structure/brainmask_fs_*.txt
		echo "<a href=\"./${Image}_stats.txt\" target=\"_blank\">Image signal stats (open in a new tab)</a><BR><BR>" >>$reporthtml
		cp $StudyFolder/$Subject/QC/Structure/${Image}_stats.txt $StudyFolder/$Subject/QC/Structure/${Image}_stats.tsv # Note that firefox does not open tsv file in tab
		rm "$T1wFolder"/T1wmulT2w.nii.gz
		acpcnii2gif $StudyFolder/$Subject/T1w/BiasFieldCorrection_sqrtT1wXT2w/T1wmulT2w_brain_norm.nii.gz $StudyFolder/$Subject/T1w/BiasFieldCorrection_sqrtT1wXT2w/T1wmulT2w_brain_norm_modulate_mask.nii.gz $OutputFolder/Structure/report/T1wmulT2w_brain_norm_modulate_mask.gif
		echo "<I>T1wmulT2w_brain_norm_mmodulate_mask</I><BR>" >>$reporthtml
		echo "Please check red countors outline non-white matter structures (e.g. ventricles, vasculature, sulci) and reasonably small.<BR>" >>$reporthtml
		size=($(identify -format '%w %h' $OutputFolder/Structure/report/T1wmulT2w_brain_norm_modulate_mask.gif))
		rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
		dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
		echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/T1wmulT2w_brain_norm_modulate_mask.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div>" >>$reporthtml
		val=$(echo "scale=2; $(${FSLDIR}/bin/fslstats $StudyFolder/$Subject/T1w/BiasFieldCorrection_sqrtT1wXT2w/T1wmulT2w_brain_norm_modulate_mask.nii.gz -V | awk '{print $1}')/$(${FSLDIR}/bin/fslstats $StudyFolder/$Subject/T1w/BiasFieldCorrection_sqrtT1wXT2w/T1wmulT2w_brain.nii.gz -V | awk '{print $1}')" | bc -l)
		echo -e "T1wmulT2w_brain_norm_modulate_mask_ratio\t$val\n" >$OutputFolder/Structure/T1wmulT2w_brain_norm_modulate_stats.tsv
		cat $OutputFolder/Structure/T1wmulT2w_brain_norm_modulate_stats.tsv | tsv2html >>$reporthtml
		echo "<BR>" >>$reporthtml

		${FSLDIR}/bin/fslmaths $StudyFolder/$Subject/T1w/BiasField_acpc_dc.nii.gz -thr 1 $OutputFolder/Structure/report/BiasField_thr1
		${FSLDIR}/bin/fslmaths $StudyFolder/$Subject/T1w/BiasField_acpc_dc.nii.gz -uthr 1 $OutputFolder/Structure/report/BiasField_uthr1
		${FSLDIR}/bin/overlay 1 0 $StudyFolder/$Subject/T1w/T1w_acpc_dc_restore.nii.gz -a $OutputFolder/Structure/report/BiasField_thr1.nii.gz 1 1.2 $OutputFolder/Structure/report/BiasField_uthr1.nii.gz 0.8 1 $OutputFolder/Structure/report/BiasFieldOverlay.nii.gz
		acpcnii2gif $OutputFolder/Structure/report/BiasFieldOverlay.nii.gz NONE $OutputFolder/Structure/report/BiasFieldOverlay.gif
		${FSLDIR}/bin/imrm $OutputFolder/Structure/report/BiasFieldOverlay.nii.gz $OutputFolder/Structure/report/BiasField_thr1 $OutputFolder/Structure/report/BiasField_uthr1
		echo "<I>T1wmulT2w biasfield</I><BR>" >>$reporthtml
		echo "Please check biasfield is concentric and minimal asymmetry over the brain<BR>" >>$reporthtml
		size=($(identify -format '%w %h' $OutputFolder/Structure/report/BiasFieldOverlay.gif))
		rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
		dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
		echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/BiasFieldOverlay.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div>" >>$reporthtml

		${FSLDIR}/bin/fslstats $StudyFolder/$Subject/T1w/BiasField_acpc_dc.nii.gz -k $StudyFolder/$Subject/T1w/T1w_acpc_dc_brain -p 0 -p 25 -p 50 -p 75 -p 100 | awk '{printf "Min\t%1.5f\nQ2\t%1.5f\nQ3\t%1.5f\nQ4\t%1.5f\nMax\t%1.5f\nIQR\t%1.5f\n",$1,$2,$3,$4,$5,$4-$2}' >$OutputFolder/Structure/BiasField_acpc_dc_stats.tsv
		cat $OutputFolder/Structure/BiasField_acpc_dc_stats.tsv | tsv2html >>$reporthtml
	fi

	# Create structural QC scenes
	DummyPath="DUMMYPATH" #This is an actual string in the TEMPLATE_structuralQC.scene file.

	mkdir -p $OutputFolder/Structure/Templates/fsaverage_LR32k

	# Copy templates
	if [ $Species = 0 ]; then # Human
		cp ${TemplateFolder}/MNINonLinear/MNI152_T1_0.7mm.nii.gz ${TemplateFolder}/MNINonLinear/S1200.[L,R].inflated_MSMAll.164k_fs_LR.surf.gii ${TemplateFolder}/MNINonLinear/S1200.[L,R].midthickness_MSMAll.164k_fs_LR.surf.gii ${TemplateFolder}/MNINonLinear/S1200.MyelinMap_BC_MSMAll.164k_fs_LR.dscalar.nii ${TemplateFolder}/MNINonLinear/S1200.sulc_MSMAll.164k_fs_LR.dscalar.nii $OutputFolder/Structure/Templates/
		cp ${TemplateFolder}/MNINonLinear/fsaverage_LR32k/S1200.MyelinMap_MSMAll.32k_fs_LR.dscalar.nii ${TemplateFolder}/MNINonLinear/fsaverage_LR32k/S1200.MyelinMap_BC_MSMAll.32k_fs_LR.dscalar.nii ${TemplateFolder}/MNINonLinear/fsaverage_LR32k/S1200.thickness_MSMAll.32k_fs_LR.dscalar.nii $OutputFolder/Structure/Templates/fsaverage_LR32k/

	else # MSMAll is not yet established in NHP
		cp ${TemplateFolder}/MNINonLinear/${TempateName}_AverageT1w_restore.nii.gz $OutputFolder/Structure/Templates/MNI152_T1_0.7mm.nii.gz
		for hemi in L R; do
			cp ${TemplateFolder}/MNINonLinear/${TempateName}.${hemi}.inflated.164k_fs_LR.surf.gii $OutputFolder/Structure/Templates/S1200.${hemi}.inflated_MSMAll.164k_fs_LR.surf.gii
			cp ${TemplateFolder}/MNINonLinear/${TempateName}.${hemi}.midthickness.164k_fs_LR.surf.gii $OutputFolder/Structure/Templates/S1200.${hemi}.midthickness_MSMAll.164k_fs_LR.surf.gii
		done
		cp ${TemplateFolder}/MNINonLinear/${TempateName}.MyelinMap_BC.164k_fs_LR.dscalar.nii $OutputFolder/Structure/Templates/S1200.MyelinMap_BC_MSMAll.164k_fs_LR.dscalar.nii
		cp ${TemplateFolder}/MNINonLinear/${TempateName}.sulc.164k_fs_LR.dscalar.nii $OutputFolder/Structure/Templates/S1200.sulc_MSMAll.164k_fs_LR.dscalar.nii
		cp ${TemplateFolder}/MNINonLinear/fsaverage_LR32k/${TempateName}.MyelinMap.32k_fs_LR.dscalar.nii $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.MyelinMap_MSMAll.32k_fs_LR.dscalar.nii
		cp ${TemplateFolder}/MNINonLinear/fsaverage_LR32k/${TempateName}.MyelinMap_BC.32k_fs_LR.dscalar.nii $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.MyelinMap_BC_MSMAll.32k_fs_LR.dscalar.nii
		cp ${TemplateFolder}/MNINonLinear/fsaverage_LR32k/${TempateName}.thickness.32k_fs_LR.dscalar.nii $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.thickness_MSMAll.32k_fs_LR.dscalar.nii

	fi

	# Registration
	echo "<a name=\"Registration\"><div id=\"Registration\"></div></a>" >>$reporthtml
	echo "<hr><B><span style=\"color:gray\">Structure</span></B> - | <a href=\"#Images\">Images</a> | <a href=\"#Fieldmap\">Fieldmap</a> | <a href=\"#Biasfield\">Biasfield</a> | <B>Registration</B> | <a href=\"#Surfaces\">Surfaces</a><BR><BR>" >>$reporthtml

	# QC for T2wMulT1w
	if [ -e $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/T2w2T1w ]; then
		if [ -e $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/T2w2T1w/sqrtT1wbyT2w.nii.gz ]; then
			${FSLDIR}/bin/slicer $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/T2w2T1w/sqrtT1wbyT2w.nii.gz -s 2 -a $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.png
			#convert $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.png $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.gif
			#rm $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.png
		fi
	elif [ -e $StudyFolder/$Subject/T2w/T2wToT1wReg ]; then
		${FSLDIR}/bin/fslmaths $StudyFolder/$Subject/T1w/T1w_acpc.nii.gz -mul $StudyFolder/$Subject/T2w/T2wToT1wReg/T2w2T1w.nii.gz -sqrt $StudyFolder/$Subject/T2w/T2wToT1wReg/sqrtT1wbyT2w.nii.gz
		${FSLDIR}/bin/slicer $StudyFolder/$Subject/T2w/T2wToT1wReg/sqrtT1wbyT2w.nii.gz -s 2 -a $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.png
		#convert $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.png $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.gif
	fi

	if [ -e $StudyFolder/$Subject/T1w/${Subject}_1mm ]; then
		FSSubjecDir=${Subject}_1mm
	else
		FSSubjecDir=${Subject}
	fi

	if [[ -e $StudyFolder/$Subject/T1w/${FSSubjecDir}/mri/T1wMulT2w_hires.nii.gz && -e $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg ]]; then
		${FSLDIR}/bin/slicer $StudyFolder/$Subject/T1w/${FSSubjecDir}/mri/T1wMulT2w_hires.nii.gz -s 2 -a $OutputFolder/Structure/report/sqrtT1wbyT2w_FS.png
		#convert $OutputFolder/Structure/report/sqrtT1wbyT2w_FS.png $OutputFolder/Structure/report/sqrtT1wbyT2w_FS.gif
		pngappend $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.png + $OutputFolder/Structure/report/sqrtT1wbyT2w_FS.png $OutputFolder/Structure/report/sqrtT1wbyT2w.png
		rm $OutputFolder/Structure/report/sqrtT1wbyT2w_FSL.png $OutputFolder/Structure/report/sqrtT1wbyT2w_FS.png
		convert $OutputFolder/Structure/report/sqrtT1wbyT2w.png $OutputFolder/Structure/report/sqrtT1wbyT2w.gif

		echo "<I>sqrtT1wMulT2w</I><BR>" >>$reporthtml
		echo "Please check T1w and T2w images are well aligned together after FSL BBR and FreeSurferBBR. If the image of 'Square root of T1w multiplied by T2w' shows curved lines between Gm/WM boundaries, the T1w and T2w images may not be well alighed. Also please find the BBR cost is reasonably small. In most cases of successful registraion, the values of FS BBR cost may be less than 0.3. <BR><BR>" >>$reporthtml
		echo "Result of BBR (left, FSL-BBR, right, FreeSurfer-BBR)<BR>" >>$reporthtml
		size=($(identify -format '%w %h' $OutputFolder/Structure/report/sqrtT1wbyT2w.gif))
		rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
		dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
		echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/sqrtT1wbyT2w.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div>" >>$reporthtml

	else
		echo "<I>sqrtT1wMulT2w</I><BR>" >>$reporthtml
		echo "Not found T2w image <BR><BR>" >>$reporthtml
	fi

	if [ -e $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/T2w2T1w ]; then
		echo -e "FSL_BBR_mincost\t$(flirt -in $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/T2w_acpc.nii.gz -ref $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/T1w_acpc.nii.gz -schedule $FSLDIR/etc/flirtsch/measurecost1.sch -init $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/T2w2T1w/T2w_reg.mat -wmseg $StudyFolder/$Subject/T2w/T2wToT1wDistortionCorrectAndReg/T2w2T1w/T2w_reg_fast_wmseg.nii.gz -cost bbr | head -1 | awk '{print $1}')" >$OutputFolder/Structure/T2wToT1w.mincost.tsv
	elif [ -e $StudyFolder/$Subject/T2w/T2wToT1wReg/T2w2T1w ]; then
		echo -e "FSL_BBR_mincost\t$(flirt -in $StudyFolder/$Subject/T2w/T2w_acpc.nii.gz -ref $StudyFolder/$Subject/T1w/T1w_acpc.nii.gz -schedule $FSLDIR/etc/flirtsch/measurecost1.sch -init $StudyFolder/$Subject/T2w/T2wToT1wReg/T2w2T1w.mat -wmseg $StudyFolder/$Subject/T2w/T2wToT1wReg/T2w2T1w_fast_wmseg.nii.gz -cost bbr | head -1 | awk '{print $1}')" >$OutputFolder/Structure/T2wToT1w.mincost.tsv
	fi
	if [ -e $StudyFolder/$Subject/T1w/${FSSubjecDir}/mri/transforms/T2wtoT1w.dat.mincost ]; then
		echo -e "FreeSurfer_BBR_mincost\t$(cat $StudyFolder/$Subject/T1w/${FSSubjecDir}/mri/transforms/T2wtoT1w.dat.mincost | awk '{print $1}')" >>$OutputFolder/Structure/T2wToT1w.mincost.tsv
	elif [ -e $StudyFolder/$Subject/T1w/${FSSubjecDir}/mri/transforms/T2raw.auto.dat.mincost ]; then
		echo -e "FreeSurfer_BBR_mincost\t$(cat $StudyFolder/$Subject/T1w/${FSSubjecDir}/mri/transforms/T2raw.auto.dat.mincost | awk '{print $1}')" >>$OutputFolder/Structure/T2wToT1w.mincost.tsv
	fi

	if [ -e $OutputFolder/Structure/T2wToT1w.mincost.tsv ]; then
		# output tab delimited txt to html
		cat $OutputFolder/Structure/T2wToT1w.mincost.tsv | tsv2html >>$reporthtml
	fi
	echo "<BR>" >>$reporthtml

	# Create T1w and MNI152 overlay
	echo "Creating T1w+MNI152"
	${FSLDIR}/bin/slicer $StudyFolder/$Subject/T1w/T1w_acpc_dc_restore.nii.gz $StudyFolder/$Subject/QC/Structure/Templates/MNI152_T1_0.7mm.nii.gz -s 2 -e 0.05 -a $OutputFolder/Structure/report/T1w_acpc_dc_restore+MNI152.png
	${FSLDIR}/bin/slicer $StudyFolder/$Subject/MNINonLinear/T1w_restore.nii.gz $StudyFolder/$Subject/QC/Structure/Templates/MNI152_T1_0.7mm.nii.gz -s 2 -e 0.05 -a $OutputFolder/Structure/report/T1w_restore+MNI152.png
	echo "<I>T1w in MNI152 in MNI space (left, T1w_acpc_dc, right, T1w_restore) </I><BR>" >>$reporthtml
	echo "Left) Please check subject's head+brain image (T1w_acpc_dc_restore) in gray color is appropriately positioned in AC-PC MNI space. Red coutours indicate MNI152 standard head+brain. Note that the size and shape of subject's head+brain can be different from MNI152 standard head+brain, because this image is transformed to this space without any scaling (or zooming), shearing or warping. Right) Please check subject's non-linear warped head+brain image (T1w_restore) in gray color is appropriately positioned and well warpred in AC-PC MNI space. Red coutours indicate MNI152 standard head+brain. Note that the size and shape of subject's head+brain is close to those of MNI152 standard head+brain, because this image is transformed to this space with linear and non-linear warping. <BR>" >>$reporthtml
	pngappend $OutputFolder/Structure/report/T1w_acpc_dc_restore+MNI152.png + $OutputFolder/Structure/report/T1w_restore+MNI152.png $OutputFolder/Structure/report/T1w+MNI152.png
	convert $OutputFolder/Structure/report/T1w+MNI152.png $OutputFolder/Structure/report/T1w+MNI152.gif
	rm $OutputFolder/Structure/report/T1w_acpc_dc_restore+MNI152.png $OutputFolder/Structure/report/T1w_restore+MNI152.png $OutputFolder/Structure/report/T1w+MNI152.png
	size=($(identify -format '%w %h' $OutputFolder/Structure/report/T1w+MNI152.gif))
	rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
	dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
	echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/T1w+MNI152.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

	# Create Workbench Scene
	cat $TemplateFolder/scenes/TEMPLATE_structuralQC.scene | sed "s#SubjectID#$Subject#g" | sed "s#S1200.#Templates/S1200.#g" | sed "s#MNI152_T1_0.7mm.nii.gz#Templates/MNI152_T1_0.7mm.nii.gz#g" >$OutputFolder/Structure/StructuralQC.scene
	# NOTES: how to create TEMPLATE_structuralQC.scene
	# Subject=K1805171800_MR1
	# cat $Subject/QC/Structure/StructuralQC.scene | sed "s#$Subject#SubjectID#g" | sed "s#Templates/S1200.#S1200.#g" | sed "s#Templates/MNI152_T1_0.7mm.nii.gz#MNI152_T1_0.7mm.nii.gz#g"  > TEMPLATE_structuralQC.scene

	CWD=$(pwd)
	cd $StudyFolder/$Subject/MNINonLinear
	if [ ! -e ${Subject}.ArealDistortion_MSMAll.164k_fs_LR.dscalar.nii ]; then
		ln -sf ${Subject}.ArealDistortion_MSMAll_2_d${ICAdim}_WRN.164k_fs_LR.dscalar.nii ${Subject}.ArealDistortion_MSMAll.164k_fs_LR.dscalar.nii
	fi
	if [ ! -e ${Subject}.EdgeDistortion_MSMAll.164k_fs_LR.dscalar.nii ]; then
		ln -sf ${Subject}.EdgeDistortion_MSMAll_2_d${ICAdim}_WRN.164k_fs_LR.dscalar.nii ${Subject}.EdgeDistortion_MSMAll.164k_fs_LR.dscalar.nii
	fi
	cd $CWD

	echo "<a name=\"Surfaces\"><div id=\"Surfaces\"></div></a>" >>$reporthtml
	echo "<hr><B><span style=\"color:gray\">Structure</span></B> - | <a href=\"#Images\">Images</a> | <a href=\"#Fieldmap\">Fieldmap</a> | <a href=\"#Biasfield\">Biasfield</a> | <a href=\"#Registration\">Registration</a> | <B>Surfaces</B><BR><BR>" >>$reporthtml
	echo "Please check pial and white surfaces (scene #1), MyelinMap_BC (subject's, group average), Sulc (subject's and group average) and Areal Distortion of surface registration (MSMSulc, MSMAll) (scnee #2), and Jacobian of non-linear volume registraion (scene #3). If you need further investigation, open scene file: $StudyFolder/$Subject/QC/Structure/StructuralQC.scene by wb_viewer. <BR><BR>" >>$reporthtml

	i=1
	${CARET7DIR}/wb_command -show-scene $OutputFolder/Structure/StructuralQC.scene $i ${reportdir}/StructuralQC_${i}.png 1800 1200
	${CARET7DIR}/wb_command -file-information $OutputFolder/Structure/StructuralQC.scene | grep '#' | awk 'NR=='$i' {printf "<I>StructuralQC.scene: %s</I><BR>", $0}' >>$reporthtml
	echo "Pial and white surfaces are overlaid on T1w_restore in MNINonLinear space. Please check the surfaces are correcty estimated. <BR>" >>$reporthtml
	convert ${reportdir}/StructuralQC_${i}.png -quality 85 ${reportdir}/StructuralQC_${i}.jpg
	rm -rf ${reportdir}/StructuralQC_${i}.png
	size=($(identify -format '%w %h' $OutputFolder/Structure/report/StructuralQC_${i}.jpg))
	dsize=($(echo ${size[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
	echo "<div class=\"magnifier\" style=\"width: ${size[0]}px;height:${size[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/StructuralQC_${i}.jpg\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

	i=2
	${CARET7DIR}/wb_command -show-scene $OutputFolder/Structure/StructuralQC.scene $i ${reportdir}/StructuralQC_${i}.png 1800 1800
	${CARET7DIR}/wb_command -file-information $OutputFolder/Structure/StructuralQC.scene | grep '#' | awk 'NR=='$i' {printf "<I>StructuralQC.scene: %s</I><BR>", $0}' >>$reporthtml
	echo "Subject MyelinMap_BC in top row, group average MyelinMap_BC in 2nd row, Subject Sulc in 3rd row, group average Sulc in 4th row, Areal Distortion of MSMSulc and MSMAll in 5th and 6th rows, respectively. For Areal Distortion, the color bar of areal distoriton is scaled from -1 to 1 in ln(2). <BR>" >>$reporthtml
	convert ${reportdir}/StructuralQC_${i}.png -quality 85 ${reportdir}/StructuralQC_${i}.jpg
	rm -rf ${reportdir}/StructuralQC_${i}.png
	size=($(identify -format '%w %h' $OutputFolder/Structure/report/StructuralQC_${i}.jpg))
	dsize=($(echo ${size[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
	echo "<div class=\"magnifier\" style=\"width: ${size[0]}px;height:${size[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/StructuralQC_${i}.jpg\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

	if [ -e $StudyFolder/$Subject/MNINonLinear/${Subject}.MSMAll.164k_fs_LR.wb.spec ]; then
		SurfReg=MSMAll
		Reg="_MSMAll"
	else
		SurfReg=MSMSulc
		Reg=""
	fi

	if [ -e $OutputFolder/Structure/SurfaceStats.tsv ]; then
		rm $OutputFolder/Structure/SurfaceStats.tsv
	fi

	echo -e "Surface_registration_method\t$SurfReg" >>$OutputFolder/Structure/SurfaceStats.tsv

	# Areal distortion
	echo -e "MSMSulc_areal_distortion_Min\t$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMSulc.32k_fs_LR.dscalar.nii -reduce MIN)" >>$OutputFolder/Structure/SurfaceStats.tsv
	q1=$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMSulc.32k_fs_LR.dscalar.nii -percentile 25)
	echo -e "MSMSulc_areal_distortion_Q1\t${q1}" >>$OutputFolder/Structure/SurfaceStats.tsv
	echo -e "MSMSulc_areal_distortion_Q2\t$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMSulc.32k_fs_LR.dscalar.nii -reduce MEDIAN)" >>$OutputFolder/Structure/SurfaceStats.tsv
	q3=$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMSulc.32k_fs_LR.dscalar.nii -percentile 75)
	echo -e "MSMSulc_areal_distortion_Q3\t${q3}" >>$OutputFolder/Structure/SurfaceStats.tsv
	echo -e "MSMSulc_areal_distortion_Max\t$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMSulc.32k_fs_LR.dscalar.nii -reduce MAX)" >>$OutputFolder/Structure/SurfaceStats.tsv
	echo -e "MSMSulc_areal_distortion_IQR\t$(echo "${q3} - ${q1}" | bc -l)" >>$OutputFolder/Structure/SurfaceStats.tsv

	if [ $SurfReg = MSMAll ]; then
		echo -e "MSMAll_areal_distortion_Min\t$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMAll.32k_fs_LR.dscalar.nii -reduce MIN)" >>$OutputFolder/Structure/SurfaceStats.tsv
		q1=$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMAll.32k_fs_LR.dscalar.nii -percentile 25)
		echo -e "MSMAll_areal_distortion_Q1\t${q1}" >>$OutputFolder/Structure/SurfaceStats.tsv
		echo -e "MSMAll_areal_distortion_Q2\t$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMAll.32k_fs_LR.dscalar.nii -reduce MEDIAN)" >>$OutputFolder/Structure/SurfaceStats.tsv
		q3=$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMAll.32k_fs_LR.dscalar.nii -percentile 75)
		echo -e "MSMAll_areal_distortion_Q3\t${q3}" >>$OutputFolder/Structure/SurfaceStats.tsv
		echo -e "MSMAll_areal_distortion_Max\t$(${CARET7DIR}/wb_command -cifti-stats $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.ArealDistortion_MSMAll.32k_fs_LR.dscalar.nii -reduce MAX)" >>$OutputFolder/Structure/SurfaceStats.tsv
		echo -e "MSMAll_areal_distortion_IQR\t$(echo "${q3} - ${q1}" | bc -l)" >>$OutputFolder/Structure/SurfaceStats.tsv
	fi

	# Surface stats
	for Map in MyelinMap MyelinMap_BC thickness; do
		if [ -e $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.${Map}${Reg}.32k_fs_LR.dscalar.nii ]; then
			${CARET7DIR}/wb_command -cifti-parcellate $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.${Map}${Reg}.32k_fs_LR.dscalar.nii $LABEL COLUMN $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.${Map}${Reg}.32k_fs_LR.pscalar.nii
			${CARET7DIR}/wb_command -cifti-convert -to-nifti $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.${Map}${Reg}.32k_fs_LR.pscalar.nii $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.${Map}${Reg}.32k_fs_LR.nii.gz
			${CARET7DIR}/wb_command -cifti-parcellate $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.${Map}_MSMAll.32k_fs_LR.dscalar.nii $LABEL COLUMN $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.${Map}_MSMAll.32k_fs_LR.pscalar.nii
			${CARET7DIR}/wb_command -cifti-convert -to-nifti $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.${Map}_MSMAll.32k_fs_LR.pscalar.nii $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.${Map}_MSMAll.32k_fs_LR.nii.gz
			Similarity=$(fslcc -p 3 $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.${Map}${Reg}.32k_fs_LR.nii.gz $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.${Map}_MSMAll.32k_fs_LR.nii.gz | awk '{printf "%1.3f",$3}')
			echo $Similarity | awk '{printf "'$Map'_similarity\t%1.3f\n",$1}' >>$OutputFolder/Structure/SurfaceStats.tsv
			rm $StudyFolder/$Subject/MNINonLinear/fsaverage_LR32k/${Subject}.${Map}${Reg}.32k_fs_LR.nii.gz $OutputFolder/Structure/Templates/fsaverage_LR32k/S1200.${Map}_MSMAll.32k_fs_LR.nii.gz
		fi
	done

	if [ -e $OutputFolder/Structure/SurfaceStats.tsv ]; then

		# output tab delimited txt to html
		cat $OutputFolder/Structure/SurfaceStats.tsv | tsv2html >>$reporthtml
		echo "<BR>" >>$reporthtml
	fi

	# robust z-score for Myelin_BC
	if [ -e $StudyFolder/$Subject/MNINonLinear/${Subject}.MyelinMap_BC${Reg}.164k_fs_LR.dscalar.nii ]; then
		Myelin=$StudyFolder/$Subject/MNINonLinear/${Subject}.MyelinMap_BC${Reg}.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(sub-Q2)/((Q3-Q1)*0.7413)' $OutputFolder/Structure/${Subject}.MyelinMap_BC_z-score.164k_fs_LR.dscalar.nii -var sub $Myelin -var Q1 $MyelinQ1to3 -select 1 1 -var Q2 $MyelinQ1to3 -select 1 2 -var Q3 $MyelinQ1to3 -select 1 3
	fi
	# robust z-score for thickness
	Thickness=$StudyFolder/$Subject/MNINonLinear/${Subject}.thickness${Reg}.164k_fs_LR.dscalar.nii
	${CARET7DIR}/wb_command -cifti-math '(sub-Q2)/((Q3-Q1)*0.7413)' $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii -var sub $Thickness -var Q1 $ThicknessQ1to3 -select 1 1 -var Q2 $ThicknessQ1to3 -select 1 2 -var Q3 $ThicknessQ1to3 -select 1 3

	# Surface defect map and score
	if [ -e $StudyFolder/$Subject/MNINonLinear/${Subject}.MyelinMap_BC${Reg}.164k_fs_LR.dscalar.nii ]; then
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>3)*(abs(B)>3)' $OutputFolder/Structure/SurfaceDefect3.dscalar.nii -var A $OutputFolder/Structure/${Subject}.MyelinMap_BC_z-score.164k_fs_LR.dscalar.nii -var B $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>4)*(abs(B)>4)' $OutputFolder/Structure/SurfaceDefect4.dscalar.nii -var A $OutputFolder/Structure/${Subject}.MyelinMap_BC_z-score.164k_fs_LR.dscalar.nii -var B $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>5)*(abs(B)>5)' $OutputFolder/Structure/SurfaceDefect5.dscalar.nii -var A $OutputFolder/Structure/${Subject}.MyelinMap_BC_z-score.164k_fs_LR.dscalar.nii -var B $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>6)*(abs(B)>6)' $OutputFolder/Structure/SurfaceDefect6.dscalar.nii -var A $OutputFolder/Structure/${Subject}.MyelinMap_BC_z-score.164k_fs_LR.dscalar.nii -var B $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>7)*(abs(B)>7)' $OutputFolder/Structure/SurfaceDefect7.dscalar.nii -var A $OutputFolder/Structure/${Subject}.MyelinMap_BC_z-score.164k_fs_LR.dscalar.nii -var B $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
	else
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>3)' $OutputFolder/Structure/SurfaceDefect3.dscalar.nii -var A $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>4)' $OutputFolder/Structure/SurfaceDefect4.dscalar.nii -var A $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>5)' $OutputFolder/Structure/SurfaceDefect5.dscalar.nii -var A $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>6)' $OutputFolder/Structure/SurfaceDefect6.dscalar.nii -var A $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
		${CARET7DIR}/wb_command -cifti-math '(abs(A)>7)' $OutputFolder/Structure/SurfaceDefect7.dscalar.nii -var A $OutputFolder/Structure/${Subject}.thickness_z-score.164k_fs_LR.dscalar.nii
	fi

	${CARET7DIR}/wb_command -cifti-merge $OutputFolder/Structure/SurfaceDefect.164k_fs_LR.dscalar.nii -cifti $OutputFolder/Structure/SurfaceDefect3.dscalar.nii -cifti $OutputFolder/Structure/SurfaceDefect4.dscalar.nii -cifti $OutputFolder/Structure/SurfaceDefect5.dscalar.nii -cifti $OutputFolder/Structure/SurfaceDefect6.dscalar.nii -cifti $OutputFolder/Structure/SurfaceDefect7.dscalar.nii
	${CARET7DIR}/wb_command -cifti-separate $OutputFolder/Structure/SurfaceDefect.164k_fs_LR.dscalar.nii COLUMN -metric CORTEX_LEFT $OutputFolder/Structure/SurfaceDefect.L.164k_fs_LR.shape.gii -metric CORTEX_RIGHT $OutputFolder/Structure/SurfaceDefect.R.164k_fs_LR.shape.gii
	${CARET7DIR}/wb_command -metric-to-volume-mapping $OutputFolder/Structure/SurfaceDefect.R.164k_fs_LR.shape.gii $StudyFolder/$Subject/MNINonLinear/${Subject}.R.midthickness.164k_fs_LR.surf.gii $StudyFolder/$Subject/MNINonLinear/T1w_restore.nii.gz $OutputFolder/Structure/SurfaceDefect.R.nii.gz -ribbon-constrained $StudyFolder/$Subject/MNINonLinear/${Subject}.R.pial.164k_fs_LR.surf.gii $StudyFolder/$Subject/MNINonLinear/${Subject}.R.white.164k_fs_LR.surf.gii
	${CARET7DIR}/wb_command -metric-to-volume-mapping $OutputFolder/Structure/SurfaceDefect.L.164k_fs_LR.shape.gii $StudyFolder/$Subject/MNINonLinear/${Subject}.L.midthickness.164k_fs_LR.surf.gii $StudyFolder/$Subject/MNINonLinear/T1w_restore.nii.gz $OutputFolder/Structure/SurfaceDefect.L.nii.gz -ribbon-constrained $StudyFolder/$Subject/MNINonLinear/${Subject}.L.pial.164k_fs_LR.surf.gii $StudyFolder/$Subject/MNINonLinear/${Subject}.L.white.164k_fs_LR.surf.gii
	${FSLDIR}/bin/fslmaths $OutputFolder/Structure/SurfaceDefect.L.nii.gz -max $OutputFolder/Structure/SurfaceDefect.R.nii.gz -bin $OutputFolder/Structure/SurfaceDefect_MNINonLinear.nii.gz
	${FSLDIR}/bin/applywarp -i $OutputFolder/Structure/SurfaceDefect_MNINonLinear.nii.gz -r $StudyFolder/$Subject/T1w/T1w_acpc_dc.nii.gz -w $StudyFolder/$Subject/MNINonLinear/xfms/standard2acpc_dc.nii.gz -o $OutputFolder/Structure/SurfaceDefect_acpc_dc.nii.gz --interp=nn
	imrm $OutputFolder/Structure/SurfaceDefect.L.nii.gz $OutputFolder/Structure/SurfaceDefect.R.nii.gz $OutputFolder/Structure/SurfaceDefect_MNINonLinear.nii.gz
	rm $OutputFolder/Structure/SurfaceDefect.L.164k_fs_LR.shape.gii $OutputFolder/Structure/SurfaceDefect.R.164k_fs_LR.shape.gii

	if [ -e $StudyFolder/$Subject/MNINonLinear/${Subject}.MyelinMap_BC${Reg}.164k_fs_LR.dscalar.nii ]; then
		echo "Surface Defect (MyelinMap_BC & thickness|z|>3)" >$OutputFolder/Structure/SurfaceDefect.txt
		echo "Surface Defect (MyelinMap_BC & thickness|z|>4)" >>$OutputFolder/Structure/SurfaceDefect.txt
		echo "Surface Defect (MyelinMap_BC & thickness|z|>5)" >>$OutputFolder/Structure/SurfaceDefect.txt
		echo "Surface Defect (MyelinMap_BC & thickness|z|>6)" >>$OutputFolder/Structure/SurfaceDefect.txt
		echo "Surface Defect (MyelinMap_BC & thickness|z|>7)" >>$OutputFolder/Structure/SurfaceDefect.txt
	else
		echo "Surface Defect (thickness|z|>3)" >$OutputFolder/Structure/SurfaceDefect.txt
		echo "Surface Defect (thickness|z|>4)" >>$OutputFolder/Structure/SurfaceDefect.txt
		echo "Surface Defect (thickness|z|>5)" >>$OutputFolder/Structure/SurfaceDefect.txt
		echo "Surface Defect (thickness|z|>6)" >>$OutputFolder/Structure/SurfaceDefect.txt
		echo "Surface Defect (thickness|z|>7)" >>$OutputFolder/Structure/SurfaceDefect.txt
	fi

	${CARET7DIR}/wb_command -set-map-names $OutputFolder/Structure/SurfaceDefect.164k_fs_LR.dscalar.nii -name-file $OutputFolder/Structure/SurfaceDefect.txt
	${CARET7DIR}/wb_command -set-map-names $OutputFolder/Structure/SurfaceDefect_acpc_dc.nii.gz -name-file $OutputFolder/Structure/SurfaceDefect.txt

	i=3
	${CARET7DIR}/wb_command -show-scene $OutputFolder/Structure/StructuralQC.scene ${i} ${reportdir}/StructuralQC_${i}.png 1800 1200
	${CARET7DIR}/wb_command -file-information $OutputFolder/Structure/StructuralQC.scene | grep '#' | awk 'NR=='$i' {printf "<I>StructuralQC.scene: %s</I><BR>", $0}' >>$reporthtml
	echo "Estimated 'surface defect' based on the robust z-score of MyelinMap_BC and thickness in HCP-S1200 data. Vertices with an absolute z-score larger than 5 (|z|>5) in both metrics are shown in blue. The number of vertices with this threshold is termed as a surface defect score 5 (SDS5). <BR>" >>$reporthtml
	convert ${reportdir}/StructuralQC_${i}.png -quality 85 ${reportdir}/StructuralQC_${i}.jpg
	rm -rf ${reportdir}/StructuralQC_${i}.png $OutputFolder/Structure/SurfaceDefect.txt
	size=($(identify -format '%w %h' $OutputFolder/Structure/report/StructuralQC_${i}.jpg))
	dsize=($(echo ${size[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
	echo "<div class=\"magnifier\" style=\"width: ${size[0]}px;height:${size[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/StructuralQC_${i}.jpg\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

	for z in 3 4 5 6 7; do
		SurfaceDefectScore=$(${CARET7DIR}/wb_command -cifti-stats $OutputFolder/Structure/SurfaceDefect${z}.dscalar.nii -reduce COUNT_NONZERO)
		echo $SurfaceDefectScore | awk '{printf "Surface_defect_score_'${z}'_(SDS'${z}')\t%d\n",$1}' >>$OutputFolder/Structure/SurfaceStats.tsv
		rm $OutputFolder/Structure/SurfaceDefect${z}.dscalar.nii
	done

	if [ -e $OutputFolder/Structure/SurfaceStats.tsv ]; then

		# output tab delimited txt to html
		cat $OutputFolder/Structure/SurfaceStats.tsv | tsv2html >>$reporthtml
		echo "<BR>" >>$reporthtml
	fi

	i=4
	${CARET7DIR}/wb_command -show-scene $OutputFolder/Structure/StructuralQC.scene ${i} ${reportdir}/StructuralQC_${i}.png 1800 1200
	${CARET7DIR}/wb_command -file-information $OutputFolder/Structure/StructuralQC.scene | grep '#' | awk 'NR=='$i' {printf "<I>StructuralQC.scene: %s</I><BR>", $0}' >>$reporthtml
	echo "Midthickness surfaces (black contour) and Jacobian map (magenta and orange). Jacobian map only shows those values less than 0.5 or higher than 2.<BR>" >>$reporthtml
	convert ${reportdir}/StructuralQC_${i}.png -quality 85 ${reportdir}/StructuralQC_${i}.jpg
	rm -rf ${reportdir}/StructuralQC_${i}.png
	size=($(identify -format '%w %h' $OutputFolder/Structure/report/StructuralQC_${i}.jpg))
	dsize=($(echo ${size[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
	echo "<div class=\"magnifier\" style=\"width: ${size[0]}px;height:${size[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/StructuralQC_${i}.jpg\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

	echo "<BR><BR>BR><BR>BR><BR>BR><BR></BODY></HTML>" >>$reporthtml

fi

# QC for Diffusion
if [[ $Diff = ON && -e $StudyFolder/$Subject/Diffusion ]]; then

	echo "Running Diffusion QC"

	if [ -e $OutputFolder/Diffusion ]; then rm -rf $OutputFolder/Diffusion; fi
	mkdir -p $OutputFolder/Diffusion

	WD=$OutputFolder/Diffusion
	reportdir=${WD}/report
	reporthtml=${WD}/report.html
	mkdir -p $reportdir
	touch $reporthtml

	echo "<HTML><HEAD><link REL=\"stylesheet\" TYPE=\"text/css\" href=\"../.files/fsl.css\"><TITLE>HCPPIPE QC REPORT</TITLE><link rel="icon" type="image/x-icon" href="../.files/favicon.ico"> <link href="../.files/lightbox.css" rel=stylesheet>
 <script src="../.files/jquery.min.js"></script><script src="../.files/lightbox.min.js" type="text/javascript"></script><link type="text/css" href="../.files/magnifier.css" rel="stylesheet"><script type="text/javascript" src="../.files/magnifier.js"></script></HEAD><BODY BGCOLOR=\"#FFFFFF\" TEXT=\"#151515\">" >>$reporthtml
	echo "<B>Diffusion</B><BR>" >>$reporthtml

	# Pos_Neg_b0 to check registration & distortion correction quality
	DistCorrDir=$StudyFolder/$Subject/Diffusion/topup
	${FSLDIR}/bin/fslroi ${DistCorrDir}/Pos_Neg_b0.nii.gz ${WD}/Pos_Neg_b0_pos.nii.gz 0 1
	${FSLDIR}/bin/fslroi ${DistCorrDir}/Pos_Neg_b0.nii.gz ${WD}/Pos_Neg_b0_neg.nii.gz 1 1
	${FSLDIR}/bin/flirt -in ${WD}/Pos_Neg_b0_pos.nii.gz -ref ${DistCorrDir}/../reg/T1w_acpc_dc_restore_brain.nii.gz -applyxfm -init ${DistCorrDir}/../reg/diff2str.mat -o ${WD}/Pos_Neg_b0_hires_pos.nii.gz
	${FSLDIR}/bin/flirt -in ${WD}/Pos_Neg_b0_neg.nii.gz -ref ${DistCorrDir}/../reg/T1w_acpc_dc_restore_brain.nii.gz -applyxfm -init ${DistCorrDir}/../reg/diff2str.mat -o ${WD}/Pos_Neg_b0_hires_neg.nii.gz
	${FSLDIR}/bin/slicer ${WD}/Pos_Neg_b0_hires_pos.nii.gz ${DistCorrDir}/../reg/T1w_acpc_dc_restore_brain.nii.gz -s 2 -e .05 -a ${WD}/Pos_Neg_b0_hires_pos.png
	${FSLDIR}/bin/flirt -in ${DistCorrDir}/hifib0.nii.gz -ref ${DistCorrDir}/../reg/T1w_acpc_dc_restore_brain.nii.gz -applyxfm -init ${DistCorrDir}/../reg/diff2str.mat -o ${WD}/hifib0_hires.nii.gz
	${FSLDIR}/bin/slicer ${WD}/Pos_Neg_b0_hires_neg.nii.gz ${DistCorrDir}/../reg/T1w_acpc_dc_restore_brain.nii.gz -s 2 -e .05 -a ${WD}/Pos_Neg_b0_hires_neg.png
	convert -loop 0 -delay 100 ${WD}/Pos_Neg_b0_hires_pos.png ${WD}/Pos_Neg_b0_hires_neg.png ${reportdir}/Pos_Neg_b0_hires.gif
	rm ${WD}/Pos_Neg_b0_hires_pos.png ${WD}/Pos_Neg_b0_hires_neg.png
	imrm ${WD}/Pos_Neg_b0_*pos.nii.gz ${WD}/Pos_Neg_b0_*neg.nii.gz
	echo "<I>Pos_b0 and Neg_b0 distorted images</I><BR>" >>$reporthtml
	echo "<IMG src=\"./report/Pos_Neg_b0_hires.gif\"  width=\"${WIDTH}\" border=\"0\"><BR><BR>" >>$reporthtml
	${FSLDIR}/bin/slicer ${WD}/hifib0_hires.nii.gz ${DistCorrDir}/../reg/T1w_acpc_dc_restore_brain.nii.gz -s 2 -e .05 -a ${reportdir}/hifib0_hires.png
	imrm ${WD}/hifib0_hires.nii.gz
	echo "<I>Distortion-corrected b0 image</I><BR>" >>$reporthtml
	echo "<IMG src=\"./report/hifib0_hires.png\"  width=\"${WIDTH}\" border=\"0\"><BR><BR>" >>$reporthtml

	${FSLDIR}/bin/flirt -in $StudyFolder/$Subject/T1w/Diffusion/dti_FA -applyxfm -init ${FSLDIR}/etc/flirtsch/ident.mat -ref $StudyFolder/$Subject/T1w/T1w_acpc_dc_restore -o $OutputFolder/Diffusion/dti_FA_hires -interp spline
	${FSLDIR}/bin/slicer $OutputFolder/Diffusion/dti_FA_hires $StudyFolder/$Subject/T1w/T1w_acpc_dc_restore -s 2 -e 0.05 -a $OutputFolder/Diffusion/report/dtiFA+T1w_acpc_dc_restore.png
	convert $OutputFolder/Diffusion/report/dtiFA+T1w_acpc_dc_restore.png $OutputFolder/Diffusion/report/dtiFA+T1w_acpc_dc_restore.gif
	rm $OutputFolder/Diffusion/report/dtiFA+T1w_acpc_dc_restore.png
	echo "<I>Diffusion FA and T1w_acpc_dc_restore</I><BR>" >>$reporthtml
	echo "<IMG src=\"./report/dtiFA+T1w_acpc_dc_restore.gif\"  width=\"${WIDTH}\" border=\"0\"><BR><BR>" >>$reporthtml

	if [ -e $StudyFolder/$Subject/Diffusion/reg ]; then
		echo -e "FSL_BBR_mincost\t$(flirt -in $StudyFolder/$Subject/Diffusion/reg/nodif2T1w.nii.gz -ref $StudyFolder/$Subject/Diffusion/reg/T1w_acpc_dc_restore_brain.nii.gz -schedule $FSLDIR/etc/flirtsch/measurecost1.sch -init $StudyFolder/$Subject/Diffusion/reg/nodif2T1w_initII.mat -wmseg $StudyFolder/$Subject/Diffusion/reg/nodif2T1w_initII_fast_wmseg.nii.gz -cost bbr | head -1 | awk '{print $1}')" >$OutputFolder/Diffusion/nodif2T1w.mincost.tsv
	fi
	if [ -e $StudyFolder/$Subject/Diffusion/reg/EPItoT1w.dat.mincost ]; then
		echo -e "FreeSurfer_BBR_mincost\t$(cat $StudyFolder/$Subject/Diffusion/reg/EPItoT1w.dat.mincost | awk '{print $1}')" >>$OutputFolder/Diffusion/nodif2T1w.mincost.tsv
	fi
	if [ -e $OutputFolder/Diffusion/nodif2T1w.mincost.tsv ]; then

		# output tab delimited txt to html
		wc=$(cat $OutputFolder/Diffusion/nodif2T1w.mincost.tsv | wc -l)
		echo "<table>" >>$reporthtml
		for i in $(seq 1 $wc); do
			echo "<tr>" >>$reporthtml
			NumField=$(cat $OutputFolder/Diffusion/nodif2T1w.mincost.tsv | awk -F "\t" 'NR=='$i' {print NF}')
			for j in $(seq 1 $NumField); do
				var=$(cat $OutputFolder/Diffusion/nodif2T1w.mincost.tsv | awk -F "\t" 'NR=='$i' {print $'$j'}')
				echo "<td>$var</td>" >>$reporthtml
			done
			echo "</tr>" >>$reporthtml
		done
		echo "</table>" >>$reporthtml
		echo "<BR><BR>" >>$reporthtml
	fi

	if [[ ! -e $StudyFolder/$Subject/Diffusion/QC ]]; then
		#. /opt/rh/rh-python36/enable
		eddy_quad $StudyFolder/$Subject/Diffusion/eddy/eddy_unwarped_images -i $StudyFolder/$Subject/Diffusion/eddy/index.txt -par $StudyFolder/$Subject/Diffusion/eddy/acqparams.txt -m $StudyFolder/$Subject/Diffusion/eddy/nodif_brain_mask.nii.gz -b $StudyFolder/$Subject/Diffusion/eddy/Pos_Neg.bvals -o $StudyFolder/$Subject/Diffusion/QC
	fi
	cp -r $StudyFolder/$Subject/Diffusion/QC/* $OutputFolder/Diffusion/

	echo "Average SNR(b=0 [s/mm2]),Average abs. motion,Average rel. motion,Total outliers [%],Std Dev voxel displacement" >$StudyFolder/$Subject/QC/Diffusion/tmp.csv
	cat $StudyFolder/$Subject/QC/Diffusion/qc.json | jq -r "[.qc_cnr_avg[0],.qc_mot_abs,.qc_mot_rel,.qc_outliers_tot,.qc_vox_displ_std ] | @csv" >>$OutputFolder/Diffusion/tmp.csv
	cat $OutputFolder/Diffusion/tmp.csv | awk -F, '{ for (i=1; i<=NF; i++)  { a[NR,i] = $i } } NF>p { p = NF }END {for(j=1; j<=p; j++) { str=a[1,j]; for(i=2; i<=NR; i++){ str=str"\t"a[i,j]; } printf "%s\n", str}}' >$OutputFolder/Diffusion/qc.tsv
	rm $OutputFolder/Diffusion/tmp.csv

	wc=$(cat $OutputFolder/Diffusion/qc.tsv | wc -l)
	echo "<I>Diffusion QC</I><BR>" >>$reporthtml
	echo "<table>" >>$reporthtml
	for i in $(seq 1 $wc); do
		echo "<tr>" >>$reporthtml
		NumField=$(cat $OutputFolder/Diffusion/qc.tsv | awk -F "\t" 'NR=='$i' {print NF}')
		for j in $(seq 1 $NumField); do
			var=$(cat $OutputFolder/Diffusion/qc.tsv | awk -F "\t" 'NR=='$i' {print $'$j'}')
			echo "<td>$var</td>" >>$reporthtml
		done
		echo "</tr>" >>$reporthtml
	done
	echo "</table>" >>$reporthtml
	echo "<BR><BR>For detials see <B><a href=\"./qc.pdf\" target=\"_blank\">Eddy QC report</a></B>" >>$reporthtml
	echo "<BR><BR><BR><BR><BR><BR><BR><BR></BODY></HTML>" >>$reporthtml

fi

# QC for Tractography
if [[ $Tract = ON && -e $StudyFolder/$Subject/T1w/Diffusion.bedpostX ]]; then

	if [[ ! $(imtest $StudyFolder/$Subject/T1w/Diffusion.bedpostX/mean_f1samples) = 1 ]]; then
		echo "ERROR: cannot find bedpostX directory. Please run bedpostX first."
		exit 1
	fi

	echo "Running Tractography QC"

	WD=$OutputFolder/Tractography
	reportdir=${WD}/report
	reporthtml=${WD}/report.html
	if [ -e $WD ]; then rm -rf $WD; fi
	mkdir -p $reportdir
	touch $reporthtml

	echo "<HTML><HEAD><link REL=\"stylesheet\" TYPE=\"text/css\" href=\"../.files/fsl.css\"><TITLE>HCPPIPE QC REPORT</TITLE><link rel="icon" type="image/x-icon" href="../.files/favicon.ico"> <link href="../.files/lightbox.css" rel=stylesheet>
 <script src="../.files/jquery.min.js"></script><script src="../.files/lightbox.min.js" type="text/javascript"></script><link type="text/css" href="../.files/magnifier.css" rel="stylesheet"><script type="text/javascript" src="../.files/magnifier.js"></script></HEAD><BODY BGCOLOR=\"#FFFFFF\" TEXT=\"#151515\">" >>$reporthtml
	echo "<B>Tractography</B><BR>" >>$reporthtml

	DiffRes=$(${FSLDIR}/bin/fslval $StudyFolder/${Subject}/T1w/Diffusion/data pixdim1)
	DiffRes=$(printf "%0.2f" ${DiffRes})
	${FSLDIR}/bin/flirt -in $StudyFolder/$Subject/T1w/wmparc.nii.gz -ref $StudyFolder/${Subject}/T1w/Diffusion/nodif_brain_mask -applyisoxfm ${DiffRes} -o $StudyFolder/$Subject/T1w/wmparc_${DiffRes}.nii.gz -interp nearestneighbour
	${FSLDIR}/bin/fslmaths $StudyFolder/$Subject/T1w/wmparc_${DiffRes}.nii.gz -uthr 2 -thr 2 -bin -mul 39 -add $StudyFolder/$Subject/T1w/wmparc_${DiffRes}.nii.gz -uthr 41 -thr 41 -bin $StudyFolder/$Subject/T1w/wmparc_${DiffRes}_wm.nii.gz

	v1=$(fslstats $StudyFolder/$Subject/T1w/wmparc_${DiffRes}_wm.nii.gz -V | awk '{printf "%f",$1}')
	for j in 1 2 3; do
		${FSLDIR}/bin/fslmaths $StudyFolder/$Subject/T1w/Diffusion.bedpostX/mean_f${j}samples -thr 0.05 -mas $StudyFolder/$Subject/T1w/wmparc_${DiffRes}_wm.nii.gz -bin $StudyFolder/$Subject/T1w/Diffusion.bedpostX/mean_f${j}samples_thr0.05_wm_mask
		v2=$(fslstats $StudyFolder/$Subject/T1w/Diffusion.bedpostX/mean_f${j}samples_thr0.05_wm_mask -V | awk '{printf "%f",$1}')
		cfr=$(echo "${v2}/${v1}*100" | bc -l | awk '{printf "%0.2f", $1}')
		echo -e "Fiber_${j}_ratio(%)\t${cfr}" >>$OutputFolder/Tractography/qc.tsv
	done
	for j in 1 2 3; do
		k=$(fslstats $StudyFolder/$Subject/T1w/Diffusion.bedpostX/dyads${j}_dispersion -k $StudyFolder/$Subject/T1w/Diffusion.bedpostX/mean_f3samples_thr0.05_wm_mask -m | awk '{printf "%f",$1}')
		D=$(perl -E 'use Math::Trig; 'pi'; say acos(1-'$k')*180/pi' | awk '{printf "%0.2f",$1}')
		echo -e "Fiber_${j}_uncertainty(degree)\t$D" >>$OutputFolder/Tractography/qc.tsv
	done

	wc=$(cat $OutputFolder/Tractography/qc.tsv | wc -l)
	echo "<I>${fmriname} Crossing fiber ratio and uncertainty </I><BR>" >>$reporthtml
	echo "<table>" >>$reporthtml
	for i in $(seq 1 $wc); do
		echo "<tr>" >>$reporthtml
		for j in $(cat $OutputFolder/Tractography/qc.tsv | awk -F "\t" 'NR=='$i' {print}'); do
			echo "<td>$j</td>" >>$reporthtml
		done
		echo "</tr>" >>$reporthtml
	done
	echo "</table>" >>$reporthtml
	echo "</BODY></HTML>" >>$reporthtml

fi

# QC for ICA-FIX
if [[ $ICAFIX = ON ]]; then

	Tasklist=$(for i in $StudyFolder/$Subject/MNINonLinear/Results/*/*.ica/filtered_func_data.ica/melodic_oIC.nii.gz; do basename $(dirname $(echo ${i%%.ica*})); done)
	TaskList=$(for i in $Tasklist; do if [ -e $StudyFolder/$Subject/MNINonLinear/Results/$i/${i}_hp*.ica/filtered_func_data.ica/melodic_oIC.dscalar.nii ]; then echo $i; fi; done)

	for rfmri in $TaskList; do

		WD=$StudyFolder/$Subject/MNINonLinear/Results/${rfmri}
		hps=$(for i in ${WD}/${rfmri}_hp*.ica; do
			j=${i##*/}
			k=${j##*_hp}
			hp=${k%%.ica}
			echo $hp
		done)
		for hp in $hps; do

			echo ""
			echo "Creating report for ${rfmri}_hp${hp}.ica"
			echo ""
			reportdir=$StudyFolder/$Subject/QC/ICA-FIX/${rfmri}_hp${hp}.ica/report
			reporthtml=${reportdir}/0000index.html
			if [ -e $reportdir ]; then rm -rf $reportdir; fi
			mkdir -p $reportdir
			touch $reporthtml

			cat <<EOF >$reporthtml
<HTML>
 <HEAD>
   <link REL="stylesheet" TYPE="text/css" href="../../../.files/fsl.css">
   <TITLE>HCP pipeline ICA-FIX REPORT</TITLE>
   <link rel="icon" type="image/x-icon" href="../../../.files/favicon.ico">
   <style type="text/css">
    .button {
      display       : inline-block;
      border-radius : 20%;     
      font-size     : 8pt;    
      text-align    : center; 
      cursor        : pointer;
      padding       : 6px;
      background    : #ccc;
      color         : #000000;
      line-height   : 1em;    
      transition    : .3s;
      border: solid 1px;
      text-decoration: none;
      margin: 0px 10px;
    }
 </style>
 <link href="../../../.files/lightbox.css" rel=stylesheet> 
 <script src="../../../.files/jquery.min.js"></script>
 <script src="../../../.files/lightbox.min.js" type="text/javascript"></script>
 <link type="text/css" href="../../../.files/magnifier.css" rel="stylesheet">
 <script type="text/javascript" src="../../../.files/magnifier.js"></script>
 </HEAD>
 <BODY BGCOLOR="#FFFFFF" TEXT="#151515">
  <hr>
  <img src="../../../.files/BCIL_1.png" style="border:none; width:150px;height:60px;float:right;">
  <img src="../../../.files/bmb.png" style="border:none; width:180px;height:50px;float:right;">
  <img src="../../../.files/hcplogo1.jpg" style="border:none; width:150px;height:50px;float:right;">
  <img src="../../../.files/fsl-logo-x2.png" style="border:none; width:80px;height:50px;float:right;">
  <img src="../../../.files/freesurfer.png" style="border:none; width:100px;height:50px;float:right;">
  <B>HCP pipeline ICA-FIX REPORT</B><BR>
  <FONT size=1>Version 0.1 &copy;2006-2021</FONT><BR><BR>
  <Font size=2>Output directory: ${StudyFolder}/${Subject}/QC/ICA-FIX/${rfmri}_hp${hp}.ica/report</FONT><BR><hr>
EOF

			dim=$(fslval $WD/${rfmri}_hp${hp}.ica/filtered_func_data.ica/melodic_oIC.nii.gz dim4)
			echo Dim=$dim
			${CARET7DIR}/wb_command -file-information $WD/${rfmri}_hp${hp}.ica/filtered_func_data.ica/melodic_oIC.dscalar.nii -only-map-names >$reportdir/componentslist.txt

			#Create png files
			command=$reportdir/CreatePNGs.sh
			if [ -e $command ]; then rm $command; fi

			for i in $(seq 1 $dim); do

				curpg=$(zeropad $i 4)

				echo "${CARET7DIR}/wb_command -show-scene $WD/${Subject}_${rfmri}_hp${hp}_ICA_Classification_singlescreen.scene 1 $reportdir/${curpg}a.png 3000 1116 -set-map-yoke I $i; \
		${CARET7DIR}/wb_command -show-scene $WD/${Subject}_${rfmri}_hp${hp}_ICA_Classification_singlescreen.scene 2 $reportdir/${curpg}c.png 3000 1116 -set-map-yoke I $i; \
		${CARET7DIR}/wb_command -show-scene $WD/${Subject}_${rfmri}_hp${hp}_ICA_Classification_singlescreen.scene 3 $reportdir/${curpg}s.png 3000 1116 -set-map-yoke I $i; \
		convert $reportdir/${curpg}a.png -quality 85 $reportdir/${curpg}a.jpg; \
		convert $reportdir/${curpg}c.png -quality 85 $reportdir/${curpg}c.jpg; \
		convert $reportdir/${curpg}s.png -quality 85 $reportdir/${curpg}s.jpg; \
		rm $reportdir/${curpg}[a,c,s].png" >>$command

			done
			echo "Creating jpg files"
			chmod +x $command
			jid=$(fsl_sub -l $StudyFolder/$Subject/logs -q short.q -t $command)

			# Create report html
			for i in $(seq 1 $dim); do

				curpg=$(zeropad $i 4)

				if [ $i = 1 ]; then
					prepg=$(zeropad $i 4)
				else
					prepg=$(zeropad $((i - 1)) 4)
				fi
				if [ $i = $dim ]; then
					nxtpg=$(zeropad $i 4)
				else
					nxtpg=$(zeropad $((i + 1)) 4)
				fi

				#echo "Creating report html for IC=${curpg} "

				for slice in a c s; do

					cp $reporthtml $reportdir/${curpg}${slice}.html

					cat <<EOF >>$reportdir/${curpg}${slice}.html
  <FORM NAME="form1">
  <center>
  <a href="${prepg}${slice}.html" class="button"><</a>
  <SELECT NAME="select1" onChange="if(document.form1.select1.value){location.href=document.form1.select1.value;}">
  <option value="#">Select components</option>
EOF

					cat $reportdir/componentslist.txt | awk '{if(NR=='$i') flag="selected"; else flag="" ;printf "<option value=\"%04d%s.html\" %s>%s %s</option>\n",$1,"'"$slice"'",flag,$1,$2}' >>$reportdir/${curpg}${slice}.html

					cat <<EOF >>$reportdir/${curpg}${slice}.html
  </SELECT>
  <a href="${nxtpg}${slice}.html" class="button">></a>
  <a href="${curpg}a.html" class="button">Axi</a>　
  <a href="${curpg}c.html" class="button">Cor</a>　
  <a href="${curpg}s.html" class="button">Sag</a>　
  </center>
  </FORM>
<center>
<div class="magnifier" style="width: 1800px; height: 670px">
  <div class="maglens" style="width:240px; height:150px">
    <img src="${curpg}${slice}.jpg" class="maglarge" style="width: 3000px height: 1116px" />
  </div>
</div>
</center>
<Font size=2>Note that IC components (in RY-BC-BL color) are overlaid on sulc (in gray) and very-inflated surfaces (left) and on bias-corrected T1w volume sections (right upper, in gray) with a opacity of 0.8. Volume sections also show white surfaces in lime and pial surfaces in blue line overlaid on IC components. If you found incorrect classification, please list ID of those components either in ReclassifyAsNoise.txt or ReclassifyAsSignal.txt in $WD, and run ReApplyFixPipeline.sh or ReApplyFixMultiRunPipeline.sh </FONT>
<BR><BR>
</BODY>
</HTML>
EOF

				done
			done
			echo jid=$jid

			cat <<EOF >>$reporthtml
  <FORM NAME="form1">
  <center>
  <SELECT NAME="select1" onChange="if(document.form1.select1.value){location.href=document.form1.select1.value;}">
  <option value="#">Select components</option>
EOF

			cat $reportdir/componentslist.txt | awk '{printf "<option value=\"%04da.html\" >%s %s</option>\n",$1,$1,$2}' >>$reporthtml

			cat <<EOF >>$reporthtml
  </SELECT>
  </center>
  </FORM>
</BODY>
</HTML>
EOF
			rm $reportdir/componentslist.txt

			${CARET7DIR}/wb_command -scene-file-relocate $WD/${Subject}_${rfmri}_hp${hp}_ICA_Classification_singlescreen.scene $StudyFolder/$Subject/QC/ICA-FIX/${rfmri}_hp${hp}_QC.scene

		done
	done

	echo ""
	echo "Finished creating ICA-FIX reports!"
	echo ""

fi

# QC for Functional MRI
if [[ $Func = ON ]]; then

	echo "Running Functional QC"

	if [ -e $OutputFolder/Function ]; then rm -rf $OutputFolder/Function; fi
	mkdir -p $OutputFolder/Function/report

	WD=$OutputFolder/Function
	reportdir=${WD}/report
	reporthtml=${WD}/report.html
	mkdir -p $reportdir
	touch $reporthtml

	echo "<HTML><HEAD><link REL=\"stylesheet\" TYPE=\"text/css\" href=\"../.files/fsl.css\"><TITLE>HCPPIPE QC REPORT</TITLE><link rel="icon" type="image/x-icon" href="../.files/favicon.ico"> <link href="../.files/lightbox.css" rel=stylesheet>
 <script src="../.files/jquery.min.js"></script><script src="../.files/lightbox.min.js" type="text/javascript"></script><link type="text/css" href="../.files/magnifier.css" rel="stylesheet"><script type="text/javascript" src="../.files/magnifier.js"></script></HEAD><BODY BGCOLOR=\"#FFFFFF\" TEXT=\"#151515\">" >>$reporthtml

	Tasklist=$(for i in $StudyFolder/$Subject/MNINonLinear/Results/*/Movement_AbsoluteRMS_mean.txt; do $FSLDIR/bin/remove_ext $(basename $(dirname $i)); done)
	Fmriconcatlist=$(for i in $StudyFolder/$Subject/MNINonLinear/Results/*/*.ica/filtered_func_data.ica/melodic_oIC.nii.gz; do basename $(dirname $(echo ${i%%.ica*})); done | sort | uniq)

	# For fmris

	for fmriname in $(echo $Tasklist | sed -e 's/@/ /g'); do

		echo "Creating report for fmri: $fmriname"

		echo "<a name=\"$fmriname\"><div id=\"$fmriname\"></div></a>" >>$reporthtml
		echo "<hr><B><span style=\"color:gray\">Function</span></B> - " >>$reporthtml
		for i in $Tasklist $Fmriconcatlist; do
			if [[ $i == $fmriname ]]; then
				echo "| <B>$i</B> " >>$reporthtml
			else
				echo "| <a href=\"#${i}\">${i}</a> " >>$reporthtml
			fi
		done
		echo "<BR><BR>" >>$reporthtml

		if [ ! -e $StudyFolder/$Subject/${fmriname}/Movement_Regressors.txt ]; then
			break
		fi
		WDfMRI=${WD}/${fmriname}
		ReportDirfMRI=${reportdir}/${fmriname}

		mkdir -p $ReportDirfMRI
		mkdir -p ${WDfMRI}
		cp $StudyFolder/$Subject/${fmriname}/Movement_Regressors.txt ${WDfMRI}/Movement_Regressors.txt
		cp $StudyFolder/$Subject/${fmriname}/Movement_Regressors_dt.txt ${WDfMRI}/Movement_Regressors_dt.txt
		cp $StudyFolder/$Subject/${fmriname}/Movement_AbsoluteRMS.txt ${WDfMRI}/Movement_AbsoluteRMS.txt
		cp $StudyFolder/$Subject/${fmriname}/Movement_RelativeRMS.txt ${WDfMRI}/Movement_RelativeRMS.txt
		cp $StudyFolder/$Subject/${fmriname}/Movement_AbsoluteRMS_mean.txt ${WDfMRI}/Movement_AbsoluteRMS_mean.txt
		cp $StudyFolder/$Subject/${fmriname}/Movement_RelativeRMS_mean.txt ${WDfMRI}/Movement_RelativeRMS_mean.txt
		cp $StudyFolder/$Subject/${fmriname}/MotionCorrection/${fmriname}_mc.ecclog ${WDfMRI}/${fmriname}_mc.ecclog

		if [[ $(cat ${WDfMRI}/${fmriname}_mc.ecclog | grep "mat/MAT_") != "" ]]; then
			echo "<I>Motion correction with MCFLIRT and ICA-FIX clean</I><BR><BR>" >>$reporthtml
		else
			echo "<I>Motion correction with FLIRT and ICA-FIX clean</I><BR><BR>" >>$reporthtml
		fi

		# investigate high pass
		hps=$(for i in $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_hp*_clean.nii.gz; do
			j=${i##*/}
			k=${j##*_hp}
			hp=${k%%_clean.nii.gz}
			echo $hp
		done)
		if [[ $(echo $hps | wc -w) != 1 ]]; then
			echo "ERROR: multiple high pass data exits!"
			exit 1
		else
			hp=$hps
		fi

		# For motion, FD, DVARS and greyplots
		echo "Creating motion and greyplots"
		matlab -nodesktop -nodisplay -r "addpath $BCILDIR/bin $DVARSDIR $DVARSDIR/mis $HCPPIPEDIR/global/matlab; bcil_motiongreyplot('${WDfMRI}/Movement_Regressors.txt','$StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_Atlas.dtseries.nii','$StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_Atlas_hp${hp}_clean.dtseries.nii','wb_command','$OutputFolder/Function/report/${fmriname}/${fmriname}_motiongreyplot.png');exit"
		size=($(identify -format '%w %h' $OutputFolder/Function/report/${fmriname}/${fmriname}_motiongreyplot.png))
		rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
		dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
		echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${fmriname}/${fmriname}_motiongreyplot.png\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

		echo "<I>Estimated movement</I><BR>" >>$reporthtml
		MoveAbsRMS=$(cat ${WDfMRI}/Movement_AbsoluteRMS_mean.txt)
		MoveRelRMS=$(cat ${WDfMRI}/Movement_RelativeRMS_mean.txt)
		FDmedian=$(cat ${WDfMRI}/Movement_Regressors_FD_stats.txt | grep Q2 | awk '{print $2}')
		echo -e "Absolute RMS (mean)\tRelative RMS (mean)\tFramewise displacement [mm] (median)" >${WDfMRI}/Movement_stats.tsv
		echo -e "$MoveAbsRMS\t$MoveRelRMS\t$FDmedian" >>${WDfMRI}/Movement_stats.tsv
		cat ${WDfMRI}/Movement_stats.tsv | tsv2html >>$reporthtml
		echo "</table><BR>" >>$reporthtml

		cp $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_Atlas_DSE_stats.csv $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_Atlas_hp${hp}_clean_DSE_stats.csv ${WDfMRI}/
		UncDVARSOutlier=$(cat $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_Atlas_DVARS_outliers.txt | awk '{sum+=$1} END {printf "%1.1f\n", sum/NR*100}')
		ClnDVARSOutlier=$(cat $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_Atlas_hp${hp}_clean_DVARS_outliers.txt | awk '{sum+=$1} END {printf "%1.1f\n", sum/NR*100}')
		UncDvarSvarDivergence=$(cat ${WDfMRI}/${fmriname}_Atlas_DSE_stats.csv | awk -F, 'NR==3||NR==4 {sum+=($4-1)^2;} END{printf "%.5f\n", sqrt(sum);}')
		ClnDvarSvarDivergence=$(cat ${WDfMRI}/${fmriname}_Atlas_hp${hp}_clean_DSE_stats.csv | awk -F, 'NR==3||NR==4 {sum+=($4-1)^2;} END{printf "%.5f\n", sqrt(sum);}')
		UncACcoeffMedian=$(cat $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_Atlas_ACcoeff_median.txt)
		ClnACcoeffMedian=$(cat $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_Atlas_hp${hp}_clean_ACcoeff_median.txt)
		echo -e "Data\t%Significant outlier volumes\tDvar-Svar divergence\tAutocorrelation coefficinet (median)" >${WDfMRI}/ICA-FIX_stats.tsv
		echo -e "motion and distortion corrected\t$UncDVARSOutlier\t$UncDvarSvarDivergence\t$UncACcoeffMedian" >>${WDfMRI}/ICA-FIX_stats.tsv
		echo -e "ICA-FIX cleaned\t$ClnDVARSOutlier\t$ClnDvarSvarDivergence\t$ClnACcoeffMedian" >>${WDfMRI}/ICA-FIX_stats.tsv
		echo "<I>ICA-FIX QC</I><BR>" >>$reporthtml
		cat ${WDfMRI}/ICA-FIX_stats.tsv | tsv2html >>$reporthtml
		echo "<BR><BR>" >>$reporthtml

		# QC for distortion correction
		echo "QC for distortion correction"
		DistCorDir=$StudyFolder/$Subject/${fmriname}/DistortionCorrectionAndEPIToT1wReg_FLIRTBBRAndFreeSurferBBRbased
		FieldMapDir=$DistCorDir/FieldMap
		echo "<I>Distortion correction</I><BR>" >>$reporthtml

		if [ -e ${FieldMapDir}/acqparams.txt ]; then # SE fieldmap
			FMtype="SE field"
			if [[ $(cat ${FieldMapDir}/acqparams.txt | awk '{x = $1; S += x*x; N++;} END {print sqrt(S/N)}') != 0 ]]; then
				PhaseDir=x
			elif [[ $(cat ${FieldMapDir}/acqparams.txt | awk '{x = $2; S += x*x; N++;} END {print sqrt(S/N)}') != 0 ]]; then
				PhaseDir=y
			else
				PhaseDir=Unknown
			fi
			if [ -e ${FieldMapDir}/SBRef2PhaseOne_gdc.nii.gz ]; then
				Polality="-"
			else
				Polality="+"
			fi
			echo "Fieldmap type: $FMtype<BR>Fieldmap phase encoding axis: <B>$PhaseDir</B><BR>fMRI phase encoding direction: <B>${Polality}${PhaseDir}</B><BR><BR>" >>$reporthtml
			echo "<I> Distorted and undistorted SE field volumes.</I><BR>Check that the input SE fieldmap is correctly used and properly analyzed. Confirm that SE filedmap are a pair of inputs distorted in opposed phased encoding direction (left) and corrected for distortion and signals modulated by Jacobian (right).<BR>" >>$reporthtml
			# Magnitude PhaseOne vs PhaseTwo to check registration & distortion correction quality
			for dc in _gdc _gdc_dc_jac; do
				${FSLDIR}/bin/fslroi ${FieldMapDir}/PhaseOne${dc}.nii.gz ${WDfMRI}/PhaseOne${dc}_vol0.nii.gz 0 1
				${FSLDIR}/bin/fslroi ${FieldMapDir}/PhaseTwo${dc}.nii.gz ${WDfMRI}/PhaseTwo${dc}_vol0.nii.gz 0 1
				${FSLDIR}/bin/flirt -in ${WDfMRI}/PhaseOne${dc}_vol0.nii.gz -ref $StudyFolder/$Subject/T1w/T1w_acpc.nii.gz -applyxfm -init ${FieldMapDir}/../fMRI2str.mat -o ${WDfMRI}/PhaseOne${dc}_hires.nii.gz
				${FSLDIR}/bin/flirt -in ${WDfMRI}/PhaseTwo${dc}_vol0.nii.gz -ref $StudyFolder/$Subject/T1w/T1w_acpc.nii.gz -applyxfm -init ${FieldMapDir}/../fMRI2str.mat -o ${WDfMRI}/PhaseTwo${dc}_hires.nii.gz
				${FSLDIR}/bin/slicer ${WDfMRI}/PhaseOne${dc}_hires.nii.gz $StudyFolder/$Subject/T1w/T1w_acpc.nii.gz -s 2 -e .05 -a ${WDfMRI}/PhaseOne${dc}_hires.png
				${FSLDIR}/bin/slicer ${WDfMRI}/PhaseTwo${dc}_hires.nii.gz $StudyFolder/$Subject/T1w/T1w_acpc.nii.gz -s 2 -e .05 -a ${WDfMRI}/PhaseTwo${dc}_hires.png

				convert -loop 0 -delay 100 ${WDfMRI}/PhaseOne${dc}_hires.png ${WDfMRI}/PhaseTwo${dc}_hires.png ${ReportDirfMRI}/PhaseOnevsTwo${dc}.gif
				rm ${WDfMRI}/PhaseOne${dc}_hires.png ${WDfMRI}/PhaseTwo${dc}_hires.png
				imrm ${WDfMRI}/PhaseOne${dc}_vol0.nii.gz ${WDfMRI}/PhaseTwo${dc}_vol0.nii.gz ${WDfMRI}/PhaseOne${dc}_hires.nii.gz ${WDfMRI}/PhaseTwo${dc}_hires.nii.gz

			done

			# B0 fieldmap and magnitude
			gifmergeh ${ReportDirfMRI}/PhaseOnevsTwo_gdc.gif ${ReportDirfMRI}/PhaseOnevsTwo_gdc_dc_jac.gif ${ReportDirfMRI}/PhaseOnevsTwo_gdc_merge.gif
			rm ${ReportDirfMRI}/PhaseOnevsTwo_gdc.gif ${ReportDirfMRI}/PhaseOnevsTwo_gdc_dc_jac.gif
			size=($(identify -format '%w %h' ${ReportDirfMRI}/PhaseOnevsTwo_gdc_merge.gif))
			rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
			dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
			echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${fmriname}/PhaseOnevsTwo_gdc_merge.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml
			$FSLDIR/bin/applywarp -i ${FieldMapDir}/TopupField.nii.gz -r $DistCorDir/T1w_acpc_dc_restore_brain.nii.gz --premat=$DistCorDir/fMRI2str.mat -o $DistCorDir/FieldMap2T1w_acpc.nii.gz
			$FSLDIR/bin/fslmaths $DistCorDir/FieldMap2T1w_acpc -thr 0 $DistCorDir/FieldMap2T1w_acpc_p
			$FSLDIR/bin/fslmaths $DistCorDir/FieldMap2T1w_acpc -uthr 0 -mul -1 $DistCorDir/FieldMap2T1w_acpc_m
			$FSLDIR/bin/overlay 1 0 $StudyFolder/$Subject/T1w/T1w_acpc.nii.gz -a $DistCorDir/FieldMap2T1w_acpc_p .0001 500 $DistCorDir/FieldMap2T1w_acpc_m .0001 500 $DistCorDir/FieldMap2T1w_acpc_overlay.nii.gz
			$FSLDIR/bin/slicer $DistCorDir/FieldMap2T1w_acpc_overlay.nii.gz -a ${reportdir}/FieldMap2T1w_acpc_overlay.png
			$FSLDIR/bin/applywarp -i ${FieldMapDir}/Magnitude.nii.gz -r $DistCorDir/T1w_acpc_dc_restore_brain.nii.gz --premat=$DistCorDir/fMRI2str.mat -o $DistCorDir/Mag2T1w_acpc.nii.gz
			${FSLDIR}/bin/slicer $DistCorDir/Mag2T1w_acpc.nii.gz $StudyFolder/$Subject/T1w/T1w_acpc.nii.gz -a ${reportdir}/MagT1w_acpc.png
			$FSLDIR/bin/pngappend ${reportdir}/FieldMap2T1w_acpc_overlay.png + ${reportdir}/MagT1w_acpc.png ${reportdir}/FieldMapMag2T1w_acpc_overlay.png
			rm ${reportdir}/FieldMap2T1w_acpc_overlay.png ${reportdir}/MagT1w_acpc.png
			echo "<I>B0 fieldmap and magnitude</I><BR>" >>$reporthtml
			echo "Check that fieldmap bias is high in inferior temporal areas but not so high in other areas, and the magnitude and T1w_acpc is well registered and that mincost of BBR registration is reasonably small. <BR>" >>$reporthtml
			size=($(identify -format '%w %h' ${reportdir}/FieldMapMag2T1w_acpc_overlay.png))
			rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
			dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
			echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/FieldMapMag2T1w_acpc_overlay.png\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div>" >>$reporthtml
			cp $FSLDIR/etc/luts/ramp*.gif ${reportdir}/
			echo "-500<img src=\"./report/ramp2.gif\"><img src=\"./report/ramp.gif\">500 <BR>" >>$reporthtml
			echo -e "${FMtype} B0 fieldmap [rad/sec] in brain area\t" >${WDfMRI}/Fieldmap_stats.tsv
			${FSLDIR}/bin/fslstats ${FieldMapDir}/TopupField.nii.gz -k ${FieldMapDir}/Magnitude_brain -p 0 -p 25 -p 50 -p 75 -p 100 | awk '{printf "Min\t%1.5f\nQ1\t%1.5f\nQ2\t%1.5f\nQ3\t%1.5f\nMax\t%1.5f\nIQR\t%1.5f\n",$1,$2,$3,$4,$5,$4-$2}' >>${WDfMRI}/Fieldmap_stats.tsv

		else # GE fieldmap
			FMtype="GE field"
			echo "TO DO" >>$reporthtml
			echo -e "${FMtype} B0 fieldmap [rad/sec] in brain area\t" >${WDfMRI}/Fieldmap_stats.tsv
			${FSLDIR}/bin/fslstats ${FieldMapDir}/FieldMap.nii.gz -k ${FieldMapDir}/Magnitude_brain -p 0 -p 25 -p 50 -p 75 -p 100 | awk '{printf "Min\t%1.5f\nQ1\t%1.5f\nQ2\t%1.5f\nQ3\t%1.5f\nMax\t%1.5f\nIQR\t%1.5f\n",$1,$2,$3,$4,$5,$4-$2}' >>${WDfMRI}/Fieldmap_stats.tsv
		fi
		cat ${WDfMRI}/Fieldmap_stats.tsv | tsv2html >>$reporthtml
		echo "<BR><BR>" >>$reporthtml

		# QC for registration
		echo "QC for registration"
		echo "<I>Registration</I><BR><BR>" >>$reporthtml
		echo "<I>${fmriname} Ref vs T1w_acpc</I><BR>" >>$reporthtml
		echo "Check that distortion-corrected Ref image aligns well with the T1w_acpc (left, <B>sqrt(T1w*EPI)</B>; right, <B>Scout2T1w</B> w/ red contours of T1w_acpc).<BR>" >>$reporthtml
		${FSLDIR}/bin/slicer $StudyFolder/$Subject/${fmriname}/T1wMulEPI $StudyFolder/$Subject/T1w/T1w_acpc_dc_restore -s 2 -e 0.05 -a ${ReportDirfMRI}/${fmriname}+finalmask.png
		${FSLDIR}/bin/slicer $StudyFolder/$Subject/${fmriname}/Scout2T1w $StudyFolder/$Subject/T1w/T1w_acpc_dc_restore -s 2 -e 0.05 -a ${ReportDirfMRI}/${fmriname}+T1w_acpc_dc_restore.png
		${FSLDIR}/bin/pngappend ${ReportDirfMRI}/${fmriname}+finalmask.png + ${ReportDirfMRI}/${fmriname}+T1w_acpc_dc_restore.png ${ReportDirfMRI}/${fmriname}+mask+T1w_acpc_dc_restore.png
		convert ${ReportDirfMRI}/${fmriname}+mask+T1w_acpc_dc_restore.png ${ReportDirfMRI}/${fmriname}+mask+T1w_acpc_dc_restore.gif
		rm ${ReportDirfMRI}/${fmriname}+T1w_acpc_dc_restore.png ${ReportDirfMRI}/${fmriname}+finalmask.png

		size=($(identify -format '%w %h' ${ReportDirfMRI}/${fmriname}+mask+T1w_acpc_dc_restore.gif))
		rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$2*1900/$1}'))
		dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
		echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${fmriname}/${fmriname}+mask+T1w_acpc_dc_restore.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

		# QC for registration between scout and cortical surfaces
		$FSLDIR/bin/applywarp -i $StudyFolder/$Subject/${fmriname}/Scout_gdc.nii.gz -r $StudyFolder/$Subject/T1w/T1w_acpc_dc.nii.gz -w $StudyFolder/$Subject/T1w/xfms/${fmriname}2str.nii.gz -o $StudyFolder/$Subject/${fmriname}/Scout2T1w_nomask.nii.gz
		cat $TemplateFolder/scenes/TEMPLATE_fMRINameBBRQC.scene | sed s/SubjectID/${Subject}/g | sed s/fMRIName/${fmriname}/g | sed s@StudyFolder@"../../../../"@g >${WDfMRI}/${fmriname}BBRQC.scene
		# NOTES: how to create TemplateScene
		# cat rfmri01_RLBBRQC.scene  | sed s/A18031601/SubjectID/g | sed s/rfmri01_RL/fMRIName/g | sed s@"../../../../"@StudyFolder@g  > TEMPLATE_fMRINameBBRQC.scene

		${CARET7DIR}/wb_command -show-scene ${WDfMRI}/${fmriname}BBRQC.scene 1 $OutputFolder/Function/report/${fmriname}/${fmriname}BBRQC.png 3800 1300
		convert $OutputFolder/Function/report/${fmriname}/${fmriname}BBRQC.png ${ReportDirfMRI}//${fmriname}BBRQC.gif
		rm -rf $OutputFolder/Function/report/${fmriname}/${fmriname}BBRQC.png $StudyFolder/$Subject/${fmriname}/Scout2T1w_nomask.nii.gz ${WDfMRI}/${fmriname}BBRQC.scene

		size=($(identify -format '%w %h' ${ReportDirfMRI}/${fmriname}BBRQC.gif))
		rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$2*1900/$1}'))
		dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
		echo "<I>${fmriname}_Ref vs surfaces</I><BR>" >>$reporthtml
		echo "Check that cortical ribbon of the distortion-corrected ref image aligns well with white and pial surfaces. Subtle misregistration can cause partial voluming effect in the signals of cortical ribbon. It is often useful to closely investigate sagittal (1st row) and axial sections (3rd row) if fMRI's phase-encode is in y-axis, and axial and coronal sections (2nd row) if fMRI's phase-encode is in x-axis. <BR>" >>$reporthtml
		echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${fmriname}/${fmriname}BBRQC.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

		DistCorrDir=$StudyFolder/$Subject/${fmriname}/DistortionCorrectionAndEPIToT1wReg_FLIRTBBRAndFreeSurferBBRbased
		if [ -e $DistCorrDir ]; then
			if [ -e ${DistCorrDir}/Scout_gdc_undistorted2T1w_init_fast_wmseg.nii.gz ]; then # SE field
				WMSEG=${DistCorrDir}/Scout_gdc_undistorted2T1w_init_fast_wmseg.nii.gz
			elif [ -e ${DistCorrDir}/Scout_gdc_undistorted_fast_wmseg.nii.gz ]; then # GE field
				WMSEG=${DistCorrDir}/Scout_gdc_undistorted_fast_wmseg.nii.gz
			fi
			echo -e "FSL_BBR_mincost\t$(flirt -in ${DistCorrDir}/Scout_gdc_undistorted.nii.gz -ref ${DistCorrDir}/T1w_acpc_dc_restore_brain.nii.gz -schedule $FSLDIR/etc/flirtsch/measurecost1.sch -init ${DistCorrDir}/Scout_gdc_undistorted2T1w_init.mat -wmseg $WMSEG -cost bbr | head -1 | awk '{print $1}')" >$OutputFolder/Function/${fmriname}/EPI2T1w.mincost.tsv
			if [ -e ${DistCorrDir}/EPItoT1w.dat.mincost ]; then
				echo -e "FreeSurfer_BBR_mincost\t$(cat ${DistCorrDir}/EPItoT1w.dat.mincost | awk '{print $1}')" >>$OutputFolder/Function/${fmriname}/EPI2T1w.mincost.tsv
			fi
			cat $OutputFolder/Function/${fmriname}/EPI2T1w.mincost.tsv | tsv2html >>$reporthtml
			echo "<BR><BR>" >>$reporthtml
		fi

		# Uncleaned and cleaned fmri movie
		if [[ $CreateMovie = "ON" ]]; then
			${FSLDIR}/bin/fslanimate $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}.nii.gz ${ReportDirfMRI}/${fmriname}.gif
			echo "<I>Mocion and distortion-corrected and noise-cleaned fmri </I><BR>" >>$reporthtml
			echo "Check that imaging artifacts (including motion-related) in uncleaned data (left) are reasonably removed in the cleaned (right). <BR>" >>$reporthtml
			${FSLDIR}/bin/fslanimate $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_hp${hp}_clean.nii.gz ${ReportDirfMRI}/${fmriname}_hp${hp}_clean.gif
			gifmergeh ${ReportDirfMRI}/${fmriname}.gif ${ReportDirfMRI}/${fmriname}_hp${hp}_clean.gif ${ReportDirfMRI}/${fmriname}_hp${hp}_merge.gif
			rm ${ReportDirfMRI}/${fmriname}.gif ${ReportDirfMRI}/${fmriname}_hp${hp}_clean.gif
			size=($(identify -format '%w %h' ${ReportDirfMRI}/${fmriname}_hp${hp}_merge.gif))
			rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
			dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
			echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${fmriname}/${fmriname}_hp${hp}_merge.gif\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR><BR>" >>$reporthtml
		fi
	done

	# For Fmriconcat
	Fmriconcatlist=$(for i in $StudyFolder/$Subject/MNINonLinear/Results/*/*.ica/filtered_func_data.ica/melodic_oIC.nii.gz; do $FSLDIR/bin/remove_ext $(basename $(dirname $(echo ${i%%.ica*}))); done | sort | uniq)

	for fmriname in $Fmriconcatlist; do

		WDfMRI=$OutputFolder/Function/${fmriname}
		hps=$(for i in $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_hp*.ica; do
			j=${i##*/}
			k=${j##*_hp}
			hp=${k%%.ica}
			echo $hp
		done)

		for hp in $hps; do
			if [ -e $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_hp${hp}.nii.gz ]; then

				echo "Creating report for fmri with high-pass filtered and denoised: ${fmriname}_hp${hp}"
				mkdir -p ${WDfMRI}
				mkdir -p $OutputFolder/Function/report/${fmriname}

				echo "<a name=\"$fmriname\"><div id=\"$fmriname\"></div></a>" >>$reporthtml
				echo "<hr><B><span style=\"color:gray\">Function</span></B> - " >>$reporthtml
				for i in $Tasklist $Fmriconcatlist; do
					if [[ $i == $fmriname ]]; then
						echo "| <B>$i</B> " >>$reporthtml
					else
						echo "| <a href=\"#${i}\">${i}</a> " >>$reporthtml
					fi
				done
				echo "<BR><BR>" >>$reporthtml

				# Time series plot
				echo "<I>Demeaned signal</I><BR>" >>$reporthtml
				if [ -e $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_brain_mask.nii.gz ]; then
					mask=$StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_brain_mask.nii.gz
				else
					mask=$(ls $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/brainmask_fs.*.nii.gz)
					if [[ $(echo $mask | wc -w) != 1 ]]; then
						echo "ERROR: multiple brain masks: $mask"
						exit 1
					fi
				fi
				mask=$StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_brain_mask.nii.gz
				${FSLDIR}/bin/fslmeants -i $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}.nii.gz -m $mask -o ${WDfMRI}/${fmriname}_ts.txt
				${FSLDIR}/bin/fslmeants -i $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_hp${hp}_clean.nii.gz -m $mask -o ${WDfMRI}/${fmriname}_hp${hp}_clean_ts.txt
				paste ${WDfMRI}/${fmriname}_ts.txt ${WDfMRI}/${fmriname}_hp${hp}_clean_ts.txt >${WDfMRI}/${fmriname}_all_ts.txt_tmp
				${FSLDIR}/bin/fslmaths $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}.nii.gz -Tmean $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_mean
				${FSLDIR}/bin/fslmaths $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_hp${hp}_clean.nii.gz -Tmean $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_hp${hp}_clean_mean

				gmeanmc=$(fslstats $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_mean.nii.gz -k $mask -m | awk '{printf "%0.6f",$1}')
				gmeancl=$(fslstats $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/${fmriname}_hp${hp}_clean_mean.nii.gz -k $mask -m | awk '{printf "%0.6f",$1}')
				cat ${WDfMRI}/${fmriname}_all_ts.txt_tmp | awk '{printf "%0.6f\t%0.6f\n",$1-'${gmeanmc}',$2-'${gmeancl}'}' >${WDfMRI}/${fmriname}_all_ts.txt
				matlab -nodesktop -nodisplay -r "addpath $BCILDIR/bin; bcil_tsplot('${WDfMRI}/${fmriname}_all_ts.txt','$OutputFolder/Function/report/${fmriname}/${fmriname}_all_ts.png','motion and distortion corrected','noise cleaned');exit"
				rm ${WDfMRI}/${fmriname}_ts.txt ${WDfMRI}/${fmriname}_hp${hp}_clean_ts.txt ${WDfMRI}/${fmriname}_all_ts.txt_tmp
				size=($(identify -format '%w %h' $OutputFolder/Function/report/${fmriname}/${fmriname}_all_ts.png))
				rsize=($(echo ${size[@]} | awk '{printf "1900 %d",$NF*1900/$1}'))
				dsize=($(echo ${rsize[@]} | awk '{printf "%d %d",$1*2,$2*2}'))
				echo "<div class=\"magnifier\" style=\"width: ${rsize[0]}px;height:${rsize[1]}px\"><div class=\"maglens\" style=\"width:240px; height:150px\"><img src=\"./report/${fmriname}/${fmriname}_all_ts.png\" class=\"maglarge\" style=\"width:${dsize[0]}px;height:${dsize[1]}px\"/></div></div><BR>" >>$reporthtml

				# ICA-FIX
				if [ -e $StudyFolder/$Subject/QC/ICA-FIX/${fmriname}_hp${hp}.ica ]; then
					echo "Creating report for ICA-FIX"
					echo "<I>ICA-FIX report <a href=\"../ICA-FIX/${fmriname}_hp${hp}.ica/report/0000index.html\" target=\"_blank\">(open in a new tab)</a></I><BR>" >>$reporthtml
					echo "You can closely view ICA-FIX QC report by opening the scene file by wb_view at $Subject/QC/ICA-FIX/${fmriname}_hp${hp}_QC.scene <BR><BR>" >>$reporthtml
					ReclassifyAsNoise=$(cat $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/ReclassifyAsNoise.txt)
					ReclassifyAsSignal=$(cat $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/ReclassifyAsSignal.txt)
					echo "ReclassifyAsNoise: $ReclassifyAsNoise <BR>ReclassifyAsSignal: $ReclassifyAsSignal<BR><BR>" >>$reporthtml
				fi

				# RestingStateStats
				if [[ -d $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/RestingStateStats ]]; then
					echo "Creating report for RestingStateStats"
					echo "<I>RestingStateStats</I><BR>" >>$reporthtml
					path="$StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/RestingStateStats/*_OrigMGT.txt"
					RSSroot=$(basename $path | sed -e 's/_OrigMGT.txt//g')
					mkdir -p $StudyFolder/$Subject/QC/Function/$fmriname
					cp -r $StudyFolder/$Subject/MNINonLinear/Results/${fmriname}/RestingStateStats $StudyFolder/$Subject/QC/Function/$fmriname/
					if [[ $(ls $StudyFolder/$Subject/QC/Function/$fmriname/*_UnstructNoise.dtseries.nii 2>/dev/null) != "" ]]; then
						rm -rf $StudyFolder/$Subject/QC/Function/$fmriname/*_UnstructNoise.dtseries.nii
					fi

					if [ -e $StudyFolder/$Subject/MNINonLinear/Results/$fmriname/Movement_Regressors_hp${hp}_clean.txt ]; then
						cp $StudyFolder/$Subject/MNINonLinear/Results/$fmriname/Movement_Regressors_hp${hp}_clean.txt $StudyFolder/$Subject/QC/Function/$fmriname/
					fi
					cp $StudyFolder/$Subject/MNINonLinear/Results/$fmriname/Movement_Regressors_demean.txt $StudyFolder/$Subject/QC/Function/$fmriname/
					cat $StudyFolder/$Subject/MNINonLinear/Results/$fmriname/${RSSroot}_stats.txt | sed -e 's/,/ /g' | awk '{ for (i=1; i<=NF; i++)  { a[NR,i] = $i } } NF>p { p = NF }END {for(j=1; j<=p; j++) { str=a[1,j]; for(i=2; i<=NR; i++){ str=str"\t"a[i,j]; } printf "%s\n", str}}' >${WDfMRI}/RestingStateStats.tsv
					cat ${WDfMRI}/RestingStateStats.tsv | tsv2html >>$reporthtml
				fi
			else
				break
			fi

		done
	done

	echo "<BR><BR><BR><BR>BR><BR><BR><BR></BODY></HTML>" >>$reporthtml

fi

# Create summary report and index html

WD=${StudyFolder}/${Subject}/QC/
reportdir=${WD}/report
reporthtml=${WD}/report.html
mkdir -p $reportdir

cat <<EOF >$reporthtml
<HTML>
 <HEAD>
   <link REL="stylesheet" TYPE="text/css" href="../.files/fsl.css">
   <TITLE>HCPPIPE GROUP QC REPORT</TITLE>
   <link rel="icon" type="image/x-icon" href="../.files/favicon.ico">
   <style type="text/css">
    .button {
      display       : inline-block;
      border-radius : 20%;     
      font-size     : 8pt;    
      text-align    : center; 
      cursor        : pointer;
      padding       : 6px;
      background    : #ccc;
      color         : #000000;
      line-height   : 1em;    
      transition    : .3s;
      border: solid 1px;
      text-decoration: none;
      margin: 0px 10px;
    }
    .button.disabled {
      display       : inline-block;
      border-radius : 20%;     
      font-size     : 8pt;    
      text-align    : center; 
      cursor        : pointer;
      padding       : 6px;
      background    : #ccc;
      color         : #808B96;
      line-height   : 1em;    
      transition    : .3s;
      border: solid 1px;
      text-decoration: none;
      margin: 0px 10px;
    }
    html, body{
      overflow: hidden;
    }
    .water {
      height: 30px;
      background-color:#EBF4FA;
    }
  </style>
 </HEAD>
 <BODY BGCOLOR="#FFFFFF" TEXT="#151515">
  <center>
   <div class="water">
    <B><span style="color:gray">$Subject - </span></B>
EOF

for DIR in Structure Function Diffusion Tractography; do
	if [ -e $WD/$DIR/report.html ]; then
		echo "   <a target=\"Change\" href=\"./$DIR/report.html\" class=\"button\">$DIR</a>" >>$reporthtml
	else
		echo "   <a class=\"button disabled\">$DIR</a>" >>$reporthtml
	fi
done
cat <<EOF >>$reporthtml
    </div>
  </center>
  <iframe frameborder="0" style="overflow:hidden; height:100%; width:100%" class="fullheight" name="Change" scrolling="auto"></iframe>
 </BODY>
</HTML>
EOF

reporthtml=${WD}/index.html
cat <<EOF >$reporthtml
<HTML>
 <HEAD>
   <link REL="stylesheet" TYPE="text/css" href=".files/fsl.css">
   <TITLE>HCPPIPE QC REPORT</TITLE>
   <link rel="icon" type="image/x-icon" href=".files/favicon.ico">
   <style type="text/css">
    html, body{
      overflow: hidden;
    }
   </style>
   <link href=".files/lightbox.css" rel="stylesheet">
   <script src=".files/jquery.min.js"></script>
   <script src=".files/lightbox.min.js" type="text/javascript"></script>
   <link type=".files/magnifier.css" rel="stylesheet">
   <script type="text/javascript" src=".files/magnifier.js"></script>
 </HEAD>
 <BODY BGCOLOR="#FFFFFF" TEXT="#151515">
  <hr>
  <img src=".files/BCIL_1.png" style="border:none; width:125px;height:50px;float:right;">
  <img src=".files/bmb.png" style="border:none; width:180px;height:50px;float:right;">
  <img src=".files/hcplogo1.jpg" style="border:none; width:150px;height:50px;float:right;">
  <img src=".files/fsl-logo-x2.png" style="border:none; width:80px;height:50px;float:right;">
  <img src=".files/freesurfer.png" style="border:none; width:100px;height:50px;float:right;">
  <B>HCPPIPE QC REPORT</B><BR>
  <FONT size=1>Version 0.1 &copy;2006-2021</FONT><BR>
  <Font size=2>Output directory: $StudyFolder/$Subject/QC </FONT><BR>
  <iframe src="./report.html" frameborder="0" style="overflow:hidden; height:100%; width:100%" class="fullheight" scrolling="no"></iframe>
 </BODY>
</HTML>
EOF

# Zip QC files
if [[ $Zip = ON ]]; then
	cd $StudyFolder
	label=""
	zipfiles=""
	if [[ $Mod =~ s ]]; then
		if [ -e $OutputFolder/Structure/StructuralQC.scene ]; then
			if [ -e $OutputFolder/${Subject}_QC_s.zip ]; then
				rm $OutputFolder/${Subject}_QC_s.zip
			fi
			if [ -e $StudyFolder/$Subject/MNINonLinear/${Subject}.MyelinMap_BC_MSMAll.164k_fs_LR.dscalar.nii ]; then
				${CARET7DIR}/wb_command -zip-scene-file $Subject/QC/Structure/StructuralQC.scene $Subject $OutputFolder/${Subject}_QC_s.zip
			fi
			zip -ru $OutputFolder/${Subject}_QC_s.zip $Subject/QC/Structure
			label=s
			zipfiles="$OutputFolder/${Subject}_QC_s.zip"
		else
			echo "ERROR: cannot find strucural QC data"
			exit 1
		fi
	fi
	if [[ $Mod =~ f ]]; then
		. $StudyFolder/$Subject/RawData/hcppipe_conf.txt
		lastfmriname=$(echo $Fmriconcatlist | awk -F@ '{print $NF}')

		fmrinameziplist=""
		if [[ -z $Fmriconcatlist ]]; then
			echo "Warning: cannot find Fmriconcatlist in hcppipe_conf.txt"
		fi
		if [ -e $StudyFolder/$Subject/QC/Function/${lastfmriname}_stats.tsv ]; then

			if [ -e $OutputFolder/${Subject}_QC_f.zip ]; then
				rm $OutputFolder/${Subject}_QC_f.zip
			fi
			for fmriname in $(echo $Fmriconcatlist | sed -e 's/@/ /g'); do
				${CARET7DIR}/wb_command -zip-scene-file $Subject/QC/Function/${fmriname}_ICA-FIX_QC.scene $Subject $OutputFolder/${Subject}_QC_f_${fmriname}.zip
				fmrinameziplist="$fmrinameziplist $OutputFolder/${Subject}_QC_f_${fmriname}.zip"
			done
			if [[ $(echo $fmrinameziplist | wc -w) -gt 1 ]]; then
				zipmerge $OutputFolder/${Subject}_QC_f.zip $fmrinameziplist
			elif [[ $(echo $fmrinameziplist | wc -w) -eq 1 ]]; then
				mv $fmrinameziplist $OutputFolder/${Subject}_QC_f.zip
			fi
			zip -ru $OutputFolder/${Subject}_QC_f.zip $Subject/QC/Function
			label+=f
			zipfiles+=" $OutputFolder/${Subject}_QC_f.zip"
		else
			echo "Warning: cannot find functional QC data"
		fi
	fi

	if [[ $Mod =~ F ]]; then
		if [ -e $OutputFolder/Fieldmap/qc.tsv ]; then
			if [ -e $OutputFolder/${Subject}_QC_F.zip ]; then
				rm $OutputFolder/${Subject}_QC_F.zip
			fi
			zip -r $OutputFolder/${Subject}_QC_F.zip $Subject/QC/Fieldmap
			label+=F
			zipfiles+=" $OutputFolder/${Subject}_QC_F.zip"
		else
			echo "Warning: cannot find fieldmap QC data"
		fi
	fi
	if [[ $Mod =~ d ]]; then
		if [ -e $OutputFolder/${Subject}_QC_d.zip ]; then
			rm $OutputFolder/${Subject}_QC_d.zip
		fi
		zip -r $OutputFolder/${Subject}_d.zip $Subject/QC/Diffusion
		label+=d
		zipfiles+=" $OutputFolder/${Subject}_QC_d.zip"
	fi
	if [[ $Mod =~ t ]]; then
		if [ -e $OutputFolder/${Subject}_QC_t.zip ]; then
			rm $OutputFolder/${Subject}_QC_t.zip
		fi
		zip -r $OutputFolder/${Subject}_t.zip $Subject/QC/Tractography
		label+=t
		zipfiles+=" $OutputFolder/${Subject}_QC_t.zip"
	fi

	# Zip archive for QC data
	if [[ $ZipMerge = ON ]]; then
		echo "Merging zip files"
		label=""
		zipfiles=""
		if [ -e $OutputFolder/${Subject}_QC_s.zip ]; then
			zipfiles="$OutputFolder/${Subject}_QC_s.zip"
			label=s
		fi
		if [ -e $OutputFolder/${Subject}_QC_f.zip ]; then
			zipfiles+=" $OutputFolder/${Subject}_QC_f.zip"
			label+=f
		fi
		if [ -e $OutputFolder/${Subject}_QC_F.zip ]; then
			zipfiles+=" $OutputFolder/${Subject}_QC_F.zip"
			label+=F
		fi
		if [ -e $OutputFolder/${Subject}_QC_d.zip ]; then
			zipfiles+=" $OutputFolder/${Subject}_QC_d.zip"
			label+=d
		fi
		if [ -e $OutputFolder/${Subject}_QC_t.zip ]; then
			zipfiles+=" $OutputFolder/${Subject}_QC_t.zip"
			label+=t
		fi
		if [ -z $label ]; then
			echo "Warning: no zip files found"
		elif [ $(echo $zipfiles | wc -w) -lt 1 ]; then
			if [ -e $OutputFolder/${Subject}_QC_${label}.zip ]; then
				rm $OutputFolder/${Subject}_QC_${label}.zip
			fi
			zipmerge $OutputFolder/${Subject}_QC_${label}.zip $zipfiles
			rm $zipfiles
		fi
	fi
fi

echo "Finished!"
echo ""
exit 0
